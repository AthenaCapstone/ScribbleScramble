{"version":3,"sources":["AppCSS.js","Socket.js","Icons.js","AvatarCarousel.js","Drawer.js","ImageIdx.js","Gallery.js","LandingPage.js","EndGame.js","UsingChat.js","ChatBox.js","utility/utilityProperties.js","Palette.js","CombinedCanvas.js","Routes.js","Footer.js","App.js","index.js"],"names":["Body","styled","div","process","Header","header","LandingPage","LandingPageHeader","RoomHeader","HowToPlay","DrawerTitle","DrawerH4","h4","PlayArea","Title","Link","h1","Title3","h2","h3","MasterScramblers","p","FooterStyle","footer","StyledCanvas","canvas","CanvasBackground","Palette","PaletteColorBtn","button","BrushSizesContainer","SmallBrushBtn","MedBrushBtn","LargeBrushBtn","SelectedColor","PaletteColors","StartDrawBtn","ScrambleBtn","WriteModeBtn","AvatarSelector","LandingBtns","PublicRoomButton","CreateRoomButton","PngButton","AddTxtBtn","DownloadAhref","a","EndGameBtn","EndGameElement","EndGameH1","EndGamePage","EndGameContainer","FAQdiv","socket","io","window","location","origin","withCredentials","on","console","log","alert","beet","cake","cat","cotton","crab","creature","egg","firefly","flower","storm","unicorn","wasp","watermelon","whale","icons","buttonStyle","background","border","AvatarCarousel","memo","iconSet","max","length","naturalSlideWidth","naturalSlideHeight","totalSlides","infinite","style","position","right","top","transform","src","width","alt","map","icon","Math","floor","random","scramblize","idx","left","Drawer","title","children","useState","open","setOpen","onClick","marginLeft","imageSet","imageURL","Gallery","image","marginRight","marginTop","padding","LandingPageComp","username","setUsername","roomToJoin","setRoomToJoin","history","useHistory","useEffect","name","push","off","startScribbling","evt","preventDefault","emit","room","marginBottom","type","placeholder","minLength","maxLength","autoComplete","onChange","target","value","trim","fontWeight","EndGame","props","finalImg","state","scribs","finalScribs","margin","href","download","to","color","NEW_CHAT_MESSAGE_EVENT","SOCKET_SERVER_URL","UsingChat","messages","setMessages","socketRef","useRef","current","socketIoClient","query","message","incomingMessage","ownedByCurrentPlayer","senderId","id","disconnect","sendMessage","messageBody","body","ChatBox","newMessage","setNewMessage","className","index","event","lightColors","red","orange","yellow","green","teal","blue","purple","lightgrey","white","darkColors","dkred","dkorange","dkyellow","dkgreen","dkteal","dkblue","dkpurple","dkgrey","black","PaletteComp","currColor","setColor","display","Object","values","backgroundColor","height","CombinedCanvas","setCanvas","brushSize","setBrushSize","font","setFont","setScribs","useParams","players","setPlayers","playerList","initCanvas","updateBrush","loadFromJSON","startDrawMode","freeDrawingBrush","drawingModeEl","document","getElementById","fabric","Canvas","isDrawingMode","brush","startWriteMode","finalDrawing","join","canvasJSON","toJSON","handleDraworWrite","clear","htmlFor","getActiveObject","setSelectionStyles","fontFamily","renderAll","newText","IText","isContentEditable","add","handleTextBtn","toDataURL","Routes","exact","path","component","Footer","krIcons","mIcons","gIcons","keIcons","generalIcons","borderRadius","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d784d9ce.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nimport { BrowserRouter as Link } from \"react-router-dom\";\n\n/*\nSPACE IS INCLUDED FOR ADDITIONAL ELEMENTS TO BE ADDED IN\nTHEIR APPROPRIATE SECTIONS. PLEASE UPDATE TOC AS NEEDED.\n\n*** Table of Contents ***\n\n - Line 20: Container Elements\n - Line 150: Basic Elements\n - Line 206: Canvas Elements\n - Line 315: Image Elements\n - Line 331: Button Elements\n\n*/\n\n// Container Elements\n\nexport const Body = styled.div`\n  display: flex;\n  background-size: 90%;\n  @media (max-width: 2650px) {\n    background-image: url(${process.env.PUBLIC_URL}/images/background.png);\n\n    flex-flow: column wrap;\n    width: 100%;\n  }\n  @media (max-width: 813px) {\n    background-image: url(${process.env.PUBLIC_URL}/images/background.png)\n      repeat;\n    width: 813px;\n    margin-right: 5px;\n  }\n  background-position-x: -20px;\n`;\n\n// media query stuff not currently used by might be later\nconst size = {\n  mobileS: \"320px\",\n  mobileM: \"375px\",\n  mobileL: \"425px\",\n  tablet: \"768px\",\n  laptop: \"1024px\",\n  laptopL: \"1440px\",\n  desktop: \"2560px\",\n};\n\nexport const Header = styled.header`\n  background: #000000\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 150px;\n  border-radius: 20px;\n  no-repeat: true\n`;\n\nexport const AvatarCarouselStyle = styled.div`\n  height: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const LandingPage = styled.div`\n  background-color: #ecf6f0;\n  border-radius: 6px;\n  height: 320px;\n  width: 348px;\n  display: flex;\n  justify-content: center;\n  margin-top: 35px;\n  margin-bottom: 40px;\n  margin-left: 140px;\n`;\n\nexport const LandingPageHeader = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\n//#4c9c8a\n//#ecf6f0;\n\nexport const RoomHeader = styled.div`\n  background-color: #4c9c8a;\n  border-radius: 6px;\n  height: 100px;\n  width: 800px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin: auto;\n  margin-top: 22px;\n  margin-bottom: 10px;\n  font-size: 20px;\n`;\n\nexport const HowToPlay = styled.div`\n  background-color: #ecf6f0;\n  border-radius: 9px;\n  width: 700px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: auto;\n  margin-bottom: 125px;\n  margin-top: 0px;\n  padding: 25px;\n  padding-bottom: 27px;\n  padding-top: 10px;\n  padding-left: 5px;\n  padding-right: 2px;\n`;\n\nexport const DrawerTitle = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const DrawerH4 = styled.h4`\n  margin: 10px 0px;\n`;\n\nexport const ScribbScrabb = styled.div`\n  background-image: url(./images/batty.png);\n`;\n\nexport const PlayArea = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const StyledModal = styled.div`\n  width: 20rem;\n  height: 20rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\n// Basic Elements\nexport const StyledLink = styled(Link)`\n  color: white;\n  font-weight: bold;\n`;\n\nexport const Title = styled.h1`\n  font-size: 2em;\n  text-align: center;\n  color: #982649;\n  background-color: black;\n  width: 800px;\n  height: 145px;\n  margin: auto;\n  margin-top: 20px;\n  border-radius: 20px;\n`;\n\nexport const Title2 = styled.h2`\n  font-size: 2em;\n  text-align: center;\n  color: white;\n`;\n\nexport const Title3 = styled.h3`\n  font-size: 1em;\n  text-align: center;\n  color: black;\n`;\n\nexport const Paragraph = styled.p`\n  align-self: center;\n  position: absolute;\n  top: 40%;\n  font-size: 1.2em;\n  text-align: center;\n  color: black;\n`;\n\nexport const MasterScramblers = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  height: 160px;\n  margin: auto;\n  margin-top: 9px;\n  margin-bottom: 0px;\n`;\n\nexport const FooterStyle = styled.footer`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #ecf6f0;\n  padding: 35px;\n`;\n\n// Canvas Elements\n\nexport const StyledCanvas = styled.canvas`\n  width: 450px;\n  margin: auto;\n  border: 3px outset black;\n  border-radius: 3px;\n  z-index: 2;\n`;\n\nexport const CanvasBackground = styled.div`\n  display: flex;\n  width: 800px;\n  border-radius: 3px;\n  background: white;\n  z-index: 1;\n  margin-bottom: 10px;\n`;\n\n// container for all buttons-> writing/ drawing, etc\nexport const Palette = styled.div`\n  display: flex;\n  justify-content: center;\n  background: #4c9c8a;\n  align-items: center;\n  margin: auto;\n  margin-bottom: 15px;\n  padding: 0 0 0 0;\n  border-radius: 8px;\n  @media (max-width: 2650px) {\n    width: 800px;\n    height: 50px;\n  }\n  @media (max-width: 813px) {\n    width: 600px;\n  }\n`;\n\n//container for just the color swatches portion of the palette\n\nexport const PaletteColorBtn = styled.button`\n  border: none;\n  margin-bottom: 0px;\n`;\n\nexport const BrushSizesContainer = styled.div`\n  display: flex;\n  align-items: center;\n  height: 50px;\n  margin-left: 10px;\n`;\n\n//brush size buttons\nexport const SmallBrushBtn = styled.button`\n  height: 35px;\n  width: 35px;\n  border-radius: 6px;\n  border: 2px solid darkgrey;\n  background-color: #4c9c8a;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const MedBrushBtn = styled.button`\n  height: 35px;\n  width: 35px;\n  border-radius: 6px;\n  border: 2px solid darkgrey;\n  background-color: #4c9c8a;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const LargeBrushBtn = styled.button`\n  height: 35px;\n  width: 35px;\n  border-radius: 6px;\n  border: 2px solid darkgrey;\n  background-color: #4c9c8a;\n  margin-right: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const SelectedSize = styled.div`\n  border-size: 5px;\n  border-color: black;\n`;\n\nexport const SelectedColor = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: 0px;\n`;\n\nexport const PaletteColors = styled.div`\n  display: flex;\n  margin-left: 8px;\n  margin-right: 0px;\n  margin-bottom: 0px;\n  margin-top: 0px;\n`;\n\n// export const PaletteBtns = styled.div``;\n\n// Image Elementspalet\n\nexport const StartDrawImg = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 25%;\n  height: 50%;\n`;\n\nexport const StartWriteImg = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 10%;\n  height: 50%;\n`;\n\n// Button Elements\n\nexport const Button = styled.button`\n  border-radius: 3px;\n  border: 2px solid darkgrey;\n  align: center;\n  color: #216858\n  margin: 0 1em;\n  height: 30px;\n  width: 80px;\n  `;\n\nexport const StartDrawBtn = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nexport const StartWriteBtn = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n`;\n\n//#7744ff; //purples\n//#DB730E\n//#502e5e;\n//#3C2646\n\nexport const ScrambleBtn = styled.button`\n  border-radius: 6px;\n  border: 2px solid darkgrey;\n  align: center;\n  margin-left: 5px;\n  height: 30px;\n  width: 85px;\n  background-color: #38273f;\n  color: white;\n  font-size: 14px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: bold;\n`;\n\nexport const WriteModeBtn = styled.button`\n  border-radius: 6px;\n  border: 2px solid darkgrey;\n  align: center;\n  margin-left: 5px;\n  background-color: #134d44;\n  color: white;\n  font-size: 14px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 5px 10px;\n`;\n\nexport const DrawBtn = styled.button`\n  border-radius: 6px;\n  border: 2px solid darkgrey;\n  align: center;\n  margin-left: 5px;\n  height: 30px;\n  width: 60px;\n  background-color: #134d44;\n  color: white;\n  font-size: 14px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const AvatarSelector = styled.div`\n  position: relative;\n`;\n\nexport const LandingBtns = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  width: 130px;\n  margin-top: 10px;\n`;\n\nexport const LandingButton = styled.button`\n  border-radius: 6px;\n  border: 2px solid darkgrey;\n  align: center;\n  margin-top: 20px;\n  background-color: #134d44;\n  color: white;\n  font-size: 1.2em;\n  font-weight: bold;\n  height: 45px;\n  width: 223px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const PublicRoomButton = styled.button`\n  border-radius: 2px;\n  border: 2px solid darkgrey;\n  align: center;\n  background-color: #134d44;\n  color: white;\n  font-size: 14px;\n  font-weight: bold;\n  padding: 6px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const CreateRoomButton = styled.button`\n  border-radius: 2px;\n  border: 2px solid darkgrey;\n  align: center;\n  background-color: #134d44;\n  color: white;\n  font-size: 11px;\n  font-weight: bold;\n  height: 35px;\n  width: 130px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const ClearButton = styled.button`\n  border-radius: 6px;\n  border: 2px solid darkgrey;\n  align: center;\n  margin: 0 1em;\n  margin-top: 10px;\n  height: 28px;\n  width: 55px;\n  background-color: #134d44;\n  color: white;\n`;\n\nexport const PngButton = styled.button`\n  border-radius: 6px;\n  border: 2px solid darkgrey;\n  align: center;\n  margin-left: 5px;\n  height: 36px;\n  width: 36px;\n  background-color: #4c9c8a;\n  color: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const AddTxtBtn = styled.button`\n  border-radius: 6px;\n  border: 2px solid darkgrey;\n  align: center;\n  margin: 0 1em;\n  margin-right: 3px;\n  padding: 5px;\n  width: 80px;\n  background-color: #134d44;\n  color: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const DownloadAhref = styled.a`\n  border-radius: 7px;\n  border: 2px solid darkgrey;\n  padding: 3px 10px;\n  background-color: #134d44;\n  color: white;\n  font-size: 14px;\n  font-weight: bold;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-decoration: none;\n`;\n\nexport const PlayAgainBtn = styled.button`\n  border-radius: 6px;\n  border: 2px solid darkgrey;\n  align: center;\n  height: 15px;\n  width: 115px;\n  background-color: #134d44;\n  color: white;\n  font-size: 14px;\n  font-weight: bold;\n`;\n\nexport const EndGameBtn = styled.button`\n  border-radius: 6px;\n  border: 2px solid darkgrey;\n  align: center;\n  margin: 0 1em;\n  margin-left: 5px;\n  padding: 5px;\n  width: 80px;\n  background-color: #134d44;\n  color: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const EndGameElement = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 10px;\n`;\n\nexport const EndGameH1 = styled.h1`\n  display: flex;\n  justify-content: center;\n  font-size: 20px;\n`;\n\nexport const EndGamePage = styled.div`\n  background-color: #ecf6f0;\n  height: 600px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 800px;\n  margin: auto;\n  margin-top: 35px;\n  margin-bottom: 40px;\n`;\n\nexport const EndGameContainer = styled.div`\n  height: 200px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-top: 15px;\n`;\n\nexport const FAQdiv = styled.div`\n  margin-top: 7px;\n`;\n","import * as io from \"socket.io-client\";\n\nconst socket = io(window.location.origin, {\n  withCredentials: true,\n  // transports: [\"websocket\"],\n});\n\nsocket.on(\"connect\", () => {\n  console.log(\"FE: socket 'on connect' ->  connected to server!\");\n});\n\nsocket.on(\"invalid room\", () => {\n  alert(\"please enter valid room name\");\n});\n\nexport default socket;\n","export const alien = process.env.PUBLIC_URL + \"/images/avatars/alien.png\"\nexport const beet = process.env.PUBLIC_URL + \"/images/avatars/beet.png\";\nexport const bird = process.env.PUBLIC_URL + \"/images/avatars/bird.png\";\nexport const cake = process.env.PUBLIC_URL + \"/images/avatars/cake.png\";\nexport const cat = process.env.PUBLIC_URL + \"/images/avatars/cat.png\";\nexport const catzoom = process.env.PUBLIC_URL + \"/images/avatars/catzoom.png\";\nexport const coffee = process.env.PUBLIC_URL + \"/images/avatars/coffee.png\";\nexport const cotton = process.env.PUBLIC_URL + \"/images/avatars/cotton.png\";\nexport const crab = process.env.PUBLIC_URL + \"/images/avatars/crab.png\";\nexport const creature = process.env.PUBLIC_URL + \"/images/avatars/creature.png\";\nexport const deer = process.env.PUBLIC_URL + \"/images/avatars/deer.png\";\nexport const egg = process.env.PUBLIC_URL + \"/images/avatars/egg.png\";\nexport const exercise = process.env.PUBLIC_URL + \"/images/avatars/exercise.png\"\nexport const firefly = process.env.PUBLIC_URL + \"/images/avatars/firefly.png\";\nexport const fish = process.env.PUBLIC_URL + \"/images/avatars/fish.png\";\nexport const flower = process.env.PUBLIC_URL + \"/images/avatars/flower.png\";\nexport const fly = process.env.PUBLIC_URL + \"/images/avatars/fly.png\";\nexport const horse = process.env.PUBLIC_URL + \"/images/avatars/horse.png\";\nexport const icecream = process.env.PUBLIC_URL + \"/images/avatars/icecream.png\";\nexport const link = process.env.PUBLIC_URL + \"/images/avatars/link.png\";\nexport const monster = process.env.PUBLIC_URL + \"/images/avatars/monster.png\"\nexport const pika = process.env.PUBLIC_URL + \"/images/avatars/pika.png\";\nexport const pizza = process.env.PUBLIC_URL + \"/images/avatars/pizza.png\";\nexport const pretzel = process.env.PUBLIC_URL + \"/images/avatars/pretzel.png\";\nexport const sandwich = process.env.PUBLIC_URL + \"/images/avatars/sandwich.png\";\nexport const ski = process.env.PUBLIC_URL + \"/images/avatars/ski.png\";\nexport const spiderman =\n  process.env.PUBLIC_URL + \"/images/avatars/spiderman.png\";\nexport const storm = process.env.PUBLIC_URL + \"/images/avatars/storm.png\";\nexport const taxi = process.env.PUBLIC_URL + \"/images/avatars/taxi.png\";\nexport const tomato = process.env.PUBLIC_URL + \"/images/avatars/tomato.png\";\nexport const unicorn = process.env.PUBLIC_URL + \"/images/avatars/unicorn.png\"\nexport const violin = process.env.PUBLIC_URL + \"/images/avatars/violin.png\";\nexport const wasp = process.env.PUBLIC_URL + \"/images/avatars/wasp.png\";\nexport const watermelon =\n  process.env.PUBLIC_URL + \"/images/avatars/watermelon.png\";\nexport const whale = process.env.PUBLIC_URL + \"/images/avatars/whale.png\";\nexport const witch = process.env.PUBLIC_URL + \"./images/avatars/witch.png\";\n\nconst icons = [\n  alien,\n  beet,\n  bird,\n  cake,\n  cat,\n  catzoom,\n  coffee,\n  cotton,\n  crab,\n  creature,\n  deer,\n  egg,\n  exercise,\n  firefly,\n  fish,\n  flower,\n  fly,\n  horse,\n  icecream,\n  link,\n  pika,\n  pizza,\n  pretzel,\n  sandwich,\n  ski,\n  spiderman,\n  storm,\n  taxi,\n  tomato,\n  unicorn,\n  violin,\n  wasp,\n  watermelon,\n  whale,\n  witch,\n];\n\nexport default icons;\n","import React, { memo } from \"react\";\nimport \"pure-react-carousel/dist/react-carousel.es.css\";\nimport {\n  CarouselProvider,\n  Slider,\n  Slide,\n  ButtonBack,\n  ButtonNext,\n  Image,\n} from \"pure-react-carousel\";\n\nimport { AvatarSelector } from \"./AppCSS\";\n\nimport icons from \"./Icons\";\n\nconst buttonStyle = {\n  background: \"transparent\",\n  border: \"none\",\n};\n\nconst AvatarCarousel = memo(() => {\n  const iconSet = icons;\n  const scramblize = (iconSet) => {\n    const max = iconSet.length;\n    let randomIconIdx = Math.floor(Math.random() * max);\n    return iconSet[randomIconIdx];\n  };\n\n  const max = iconSet.length;\n  \nconsole.log('max', max)\n  const scrambleIdx = (idx = 0) => {\n    if(idx < max) {\n      return idx++;\n    } else {\n      idx = 1\n      return idx\n    } \n  };\n\n  return (\n    <CarouselProvider\n      naturalSlideWidth={1}\n      naturalSlideHeight={1}\n      totalSlides={iconSet.length}\n      infinite={true}\n    >\n      <AvatarSelector>\n        <ButtonBack\n          style={{\n            position: \"absolute\",\n            right: \"110%\",\n            top: \"50%\",\n            transform: \"translateY(-50%)\",\n            ...buttonStyle,\n          }}\n        >\n          <img\n            src=\"/images/leftArrow.png\"\n            style={{ width: \"22px\" }}\n            alt=\"icon carousel left arrow\"\n          />\n        </ButtonBack>\n        <Slider>\n          {iconSet.map((icon) => {\n            icon = scramblize(iconSet);\n            let idx = 0\n            return (\n              <Slide key={idx++}>\n                <Image src={icon} alt={icon} />\n              </Slide>\n            );\n          })}\n        </Slider>\n        <ButtonNext\n          style={{\n            position: \"absolute\",\n            left: \"110%\",\n            top: \"50%\",\n            transform: \"translateY(-50%)\",\n            ...buttonStyle,\n          }}\n        >\n          <img\n            src=\"/images/rightArrow.png\"\n            style={{ width: \"22px\" }}\n            alt=\"icon carousel right arrow\"\n          />\n        </ButtonNext>\n      </AvatarSelector>\n    </CarouselProvider>\n  );\n});\nexport default AvatarCarousel;\n","import React, { useState, useEffect } from \"react\";\n\nimport { DrawerTitle, DrawerH4 } from \"./AppCSS\";\n\nconst Drawer = ({ title, children }) => {\n  const [open, setOpen] = useState(false);\n\n  function toggle() {\n    setOpen(!open);\n  }\n\n  return (\n    <div>\n      {/* <div onClick={toggle}>{title}</div> */}\n      <DrawerTitle onClick={toggle}>\n        <DrawerH4>{title}</DrawerH4>\n        <img\n          style={{\n            width: \"15px\",\n            marginLeft: \"2px\",\n          }}\n          src=\"/images/drawericon.png\"\n        />\n      </DrawerTitle>\n      {open && <div>{children}</div>}\n    </div>\n  );\n};\n\nexport default Drawer;\n","export const imageSet = [\n  {\n    imageURL: `${process.env.PUBLIC_URL}/images/GalleryImages/coolCat.png`,\n    alt: \"Illustrated cool cat with assorted words\",\n    idx: 0\n  },\n  {\n    imageURL: `${process.env.PUBLIC_URL}/images/GalleryImages/ScribScrab.png`,\n    alt: \"Poem with illustration of large eyeballs\",\n    idx: 1\n  },\n];\n","import React from \"react\";\nimport { imageSet } from \"./ImageIdx\";\nimport \"pure-react-carousel/dist/react-carousel.es.css\";\nimport {\n  CarouselProvider,\n  Slider,\n  Slide,\n  ButtonBack,\n  ButtonNext,\n  Image,\n} from \"pure-react-carousel\";\n\nconst Gallery = () => {\n\n  const buttonStyle = {\n    background: \"transparent\",\n    border: \"none\",\n  };\n\n  const scramblize = (imageSet) => {\n    const max = imageSet.length;\n    let randomIconIdx = Math.floor(Math.random() * max);\n    return imageSet[randomIconIdx];\n  };\n\n  return (\n    <CarouselProvider\n      naturalSlideWidth={1}\n      naturalSlideHeight={1}\n      totalSlides={imageSet.length}\n      infinite={true}\n    >\n      <ButtonBack\n        style={{\n          position: \"relative\",\n          right: \"-120%\",\n          top: \"8rem\",\n          transform: \"translateY(-50%)\",\n          ...buttonStyle,\n        }}\n      > \n        <img src=\"/images/GalleryImages/rightArrow.png\" style={{ width: \"22px\" }} />\n      </ButtonBack>\n      <Slider>\n        {imageSet.map((image) => {\n          image = scramblize(imageSet);\n          return (\n            <Slide key={image.idx}>\n              <Image\n                src={image.imageURL}\n                style={{\n                  width: \"100%\",\n                  marginRight: \"1rem\",\n                  marginLeft: \"0px\",\n                  marginTop: \"1rem\",\n                  padding: \".3rem\"\n                }}\n                alt={image.alt}\n              />\n            </Slide>\n          );\n        })}\n      </Slider>\n      <ButtonNext\n          style={{\n            position: \"relative\",\n            left: \"-40%\",\n            top: \"-7rem\",\n            transform: \"translateY(-50%)\",\n            ...buttonStyle,\n          }}\n        >\n          <img src=\"/images/GalleryImages/leftArrow.png\" style={{ width: \"22px\" }} />\n        </ButtonNext>\n    </CarouselProvider>\n  );\n};\n\nexport default Gallery;\n","import { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  StartDrawBtn,\n  LandingBtns,\n  LandingPage,\n  PublicRoomButton,\n  CreateRoomButton,\n  HowToPlay,\n  LandingPageHeader,\n  DrawerTitle,\n  FAQdiv,\n} from \"./AppCSS\";\nimport socket from \"./Socket\";\nimport AvatarCarousel from \"./AvatarCarousel\";\nimport Drawer from \"./Drawer\";\nimport Gallery from \"./Gallery\"\n\nconst LandingPageComp = () => {\n  const [username, setUsername] = useState(\"random\");\n  const [roomToJoin, setRoomToJoin] = useState(\"\");\n  const history = useHistory();\n\n  useEffect(() => {\n    socket.on(\"scramble time\", (name) => {\n      history.push(`scramble/${name}`);\n      return () => socket.off(\"scramble time\");\n    });\n  }, [history]);\n\n  const startScribbling = (evt) => {\n    evt.preventDefault();\n    socket.emit(\"scribble time\", {\n      username,\n      room: roomToJoin,\n    });\n  };\n\n  return (\n    <div>\n      <LandingPageHeader>\n        <LandingPage>\n          <div>\n            <LandingBtns>\n              <input\n                style={{ marginTop: \"10px\", marginBottom: \"10px\" }}\n                type=\"text\"\n                name=\"username\"\n                placeholder=\"Enter a username\"\n                minLength={1}\n                maxLength={30}\n                autoComplete=\"false\"\n                onChange={(evt) => {\n                  setUsername(evt.target.value.trim());\n                }}\n              />\n\n              <AvatarCarousel />\n\n              <StartDrawBtn>\n                <PublicRoomButton\n                  type=\"button\"\n                  name=\"create\"\n                  onClick={(evt) => startScribbling(evt)}\n                >\n                  Play!\n                </PublicRoomButton>\n              </StartDrawBtn>\n\n              <input\n                style={{ marginTop: \"5px\", marginBottom: \"5px\" }}\n                type=\"text\"\n                placeholder=\"Know your room?\"\n                onChange={(evt) => setRoomToJoin(evt.target.value)}\n              />\n              <StartDrawBtn>\n                <CreateRoomButton\n                  type=\"button\"\n                  name=\"join\"\n                  onClick={(evt) => startScribbling(evt)}\n                >\n                  Join Room\n                </CreateRoomButton>\n              </StartDrawBtn>\n            </LandingBtns>\n          </div>\n        </LandingPage>\n        <img\n          src={\"/images/howPlay.png\"}\n          style={{\n            width: \"115px\", //246 //124\n            // marginRight: \"20px\",\n            marginTop: \"200px\",\n            marginLeft: \"25px\",\n          }}\n          alt=\"how\"\n        />\n      </LandingPageHeader>\n\n      <HowToPlay>\n        <div>\n        <Gallery />\n          <h3>FAQ:</h3>\n          <Drawer title={\"What's a Scribb Scrab?\"}>\n            <div\n              style={{\n                width: \"345px\",\n                marginRight: \"0px\",\n                marginTop: \"5px\",\n                marginBottom: \"3px\",\n              }}\n            >\n              A combination of words and drawings such as:\n            </div>\n            <div\n              style={{\n                width: \"345px\",\n                marginRight: \"0px\",\n                marginBottom: \"10px\",\n              }}\n            >\n              Illustrated poems, concrete poetry etc\n            </div>\n          </Drawer>\n\n          <div>\n            <Drawer title={\"How Do I Play?\"}>\n              <ol style={{ marginTop: \"2px\", marginBottom: \"5px\" }}>\n                <li>Click \"Play\" to Create A Room</li>\n                <li>\n                  Enter A Name and Click \"Join Room\" to Join A Friend's Room.\n                </li>\n                <li>Give Your Room Name To Friends You Want To Join.</li>\n\n                <li>Draw Or Write Whatever You Want!</li>\n                <li>\n                  Click The Scramble Button to Grab and Move Drawings or Text.\n                </li>\n                <li> When You're Done Click \"I'm Done\"</li>\n                <li>Download Your Scribb Scrabb to Share With Friends!</li>\n              </ol>\n            </Drawer>\n          </div>\n\n          <Drawer title={\"What Is Scramble Mode?\"}>\n            <div style={{ marginTop: \"6px\" }}>\n              <span>Clicking </span>\n              <span\n                style={{\n                  fontWeight: \"bold\",\n                }}\n              >\n                Scramble\n              </span>{\" \"}\n              <span>\n                allows you to grab and move drawings and text around the canvas.\n              </span>\n              <div>\n                <img\n                  style={{ width: \"400px\", marginTop: \"15px\" }}\n                  src=\"/images/scramblePic.png\"\n                />\n              </div>\n              <FAQdiv>\n                First draw your drawing then click{\" \"}\n                <span\n                  style={{\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  Scramble\n                </span>{\" \"}\n                to enable scrambling\n              </FAQdiv>\n              <div>\n                {\" \"}\n                <img\n                  style={{ width: \"400px\", marginTop: \"15px\" }}\n                  src=\"/images/demo1.png\"\n                />\n              </div>\n              <FAQdiv>\n                Click on the line you want to move or drag to select multiple\n                lines to move at once{\" \"}\n              </FAQdiv>\n              <div>\n                {\" \"}\n                <img\n                  style={{ width: \"400px\", marginTop: \"15px\" }}\n                  src=\"/images/demo2.png\"\n                />\n              </div>\n              {/* <div>First draw your drawing </div> */}\n              <div>\n                {\" \"}\n                <img\n                  style={{ width: \"400px\", marginTop: \"15px\" }}\n                  src=\"/images/demo3.png\"\n                />\n              </div>\n              <FAQdiv>You can also move rotate/edit/scale text</FAQdiv>\n              <div>\n                {\" \"}\n                <img\n                  style={{ width: \"400px\", marginTop: \"15px\" }}\n                  src=\"/images/demo9.png\"\n                />\n              </div>\n              <FAQdiv>\n                When you're ready to draw again click anywhere on the brush\n                tools to renable drawing.\n              </FAQdiv>\n              <div>\n                {\" \"}\n                <img\n                  style={{ width: \"400px\", marginTop: \"15px\" }}\n                  src=\"/images/demo9b.png\"\n                />\n              </div>\n              <FAQdiv>\n                You can also edit text that's already been placed by clicking{\" \"}\n                <span\n                  style={{\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  Scramble\n                </span>{\" \"}\n                or Edit Text\n                <div>and then clicking inside the text you want to edit.</div>\n              </FAQdiv>\n              <div>\n                {\" \"}\n                <img\n                  style={{ width: \"400px\", marginTop: \"15px\" }}\n                  src=\"/images/demo9e.png\"\n                />\n              </div>\n            </div>\n          </Drawer>\n        </div>\n      </HowToPlay>\n    </div>\n  );\n};\n\nexport default LandingPageComp;\n","import React, { useState } from \"react\";\nimport {\n  EndGamePage,\n  EndGameContainer,\n  DownloadAhref,\n  EndGameElement,\n  EndGameH1,\n} from \"./AppCSS\";\n\nimport { Link } from \"react-router-dom\";\nimport socket from \"./Socket\";\n\nconst EndGame = (props) => {\n  const [canvas, setCanvas] = useState(\"\");\n  const [scribs, setScribs] = useState(\"\");\n  //   socket.on(\"send final image\");\n\n  let finalImg = props.location.state.scribs;\n  let finalScribs = props.location.state.scribs;\n\n  socket.on(\"broadcasting final image\", (value) => {\n    finalImg = value;\n    console.log(\"finalImg---->\", finalImg);\n  });\n\n  return (\n    <EndGamePage>\n      <EndGameContainer>\n        <EndGameH1>Thanks For Playing!</EndGameH1>\n        <EndGameElement>What a Beautiful Scribb Scrabb!</EndGameElement>\n        <EndGameElement>\n          <img src={finalScribs} style={{ width: \"480px\", margin: \"10px\" }} alt=\"final canvas drawing\" />\n        </EndGameElement>\n        <DownloadAhref href={finalScribs} download=\"ScribScrab.png\">\n          Download\n        </DownloadAhref>\n\n        <EndGameElement>\n          <Link to=\"/\" style={{ color: \"black\", margin: \"15px\" }}>\n            Play Again?\n          </Link>{\" \"}\n        </EndGameElement>\n      </EndGameContainer>\n    </EndGamePage>\n  );\n};\n\nexport default EndGame;\n","import { useEffect, useRef, useState } from \"react\";\nimport socketIoClient from \"socket.io-client\"\n//import socket from \"./Socket\"\nconst NEW_CHAT_MESSAGE_EVENT = \"newChatMessage\";\nconst SOCKET_SERVER_URL = window.location.origin;\n\nconst UsingChat = (room) => {\n  console.log('I am in Using Chat react hook!')\n  const [messages, setMessages] = useState([]);//all sent and received messages\n  const socketRef = useRef();\n  console.log('in usingChat react hook messages', messages)\n  console.log('socketRefxs', socketRef.current)\n\n  useEffect(() => {\n    socketRef.current = socketIoClient(SOCKET_SERVER_URL, {\n      query: { room: room }\n    });\n\n    socketRef.current.on(NEW_CHAT_MESSAGE_EVENT, (message) => {\n      const incomingMessage = {\n        ...message,\n        ownedByCurrentPlayer: message.senderId === socketRef.current.id,\n      };\n      setMessages((messages) => [...messages, incomingMessage]);\n    });\n\n    return () => {\n      socketRef.current.disconnect();\n    };\n  }, [room]);\n\n  const sendMessage = (messageBody) => {\n    socketRef.current.emit(NEW_CHAT_MESSAGE_EVENT, {\n      body: messageBody,\n      senderId: socketRef.current.id,\n    });\n  };\n\n  return { messages, sendMessage };\n};\n\nexport default UsingChat;","import React, { useState } from \"react\";\nimport UsingChat from \"./UsingChat\"\n\nconst ChatBox = (props) => {\n  console.log('chatbox props', props)\nconst {room} = props\nconst {messages, sendMessage} = UsingChat(room);\nconst [newMessage, setNewMessage] = useState(\"\")\nconsole.log('in Chatbox - arr of Messages:', messages)\n\n\nconst handleTypingMessage = (event) => {\n  setNewMessage(event.target.value)\n}\nconst handleSubmit = () => {\n   sendMessage(newMessage)\n   setNewMessage('')\n    }\n\n\nreturn (\n    <div id=\"chat box\">\n      <div>\n        <h4> Scribble a note to your partner!</h4>  \n      </div>\n      <div>\n      <ol className=\"messageList\">\n        {messages.map((message, index) => (\n          <li key={index}\n          className={`single-message ${\n            message.ownedByCurrentPlayer ? \"my-message\" : \"received-message\"\n          }`} \n          >\n            {message.body}\n          </li>\n        ))}\n      </ol>\n      </div>\n      <textarea value= {newMessage} onChange={handleTypingMessage}\n        placeholder=\"Write something...\"\n        className=\"new-message-input\"\n      />\n      <button onClick={handleSubmit} className=\"submit-button\">\n        Send\n      </button>\n    </div>\n)\n}\n\nexport default ChatBox","export const lightColors = {\n  red: \"#FE797B\",\n  orange: \"#FFB750\",\n  yellow: \"#ffe75b\",\n  green: \"#8FE968\",\n  teal: \"#1ed5b0\",\n  // teal: \"#1ec8d5\",\n  blue: \"#1ec8d5\",\n  // blue: \"#049ce6\",\n  purple: \"#a37dcc\",\n  // pink: \" #d06f9f\",\n  // brown: \"#98472b\",\n  // brown: \"#b05637\",\n  lightgrey: \"#b9b9b9\",\n  white: \"white\",\n};\n\nexport const darkColors = {\n  dkred: \"#C1301C\",\n  dkorange: \"#C96112\",\n  dkyellow: \"#bd9d24\",\n  dkgreen: \"#177245\",\n  dkteal: \"#066380\",\n  // dkteal: \"#00536d\",\n  dkblue: \"#274d86\",\n  // dkblue: \"#023766\",\n  dkpurple: \"#4B2882\",\n  // dkpink: \"#9f4a68\",\n  // dkbrown: \"#592a13\",\n  // dkbrown: \"#4a2515\",\n\n  dkgrey: \"#434343\",\n  black: \"black\",\n};\n","import React, { useState, useEffect } from \"react\";\nimport { lightColors, darkColors, tools } from \"./utility/utilityProperties.js\";\n\nimport { PaletteColorBtn } from \"./AppCSS\";\n\nconst PaletteComp = ({ currColor, setColor }) => {\n  return (\n    <div id=\"palette\">\n      <div style={{ display: \"flex\" }}>\n        {Object.values(lightColors).map((color) => {\n          return (\n            <PaletteColorBtn\n              key={color}\n              onClick={() => {\n                setColor(color);\n              }}\n              style={{\n                backgroundColor: color,\n                height: \"19px\",\n                width: \"19px\",\n              }}\n            ></PaletteColorBtn>\n          );\n        })}\n      </div>\n      <div style={{ display: \"flex\" }}>\n        {Object.values(darkColors).map((color) => {\n          return (\n            <PaletteColorBtn\n              key={color}\n              onClick={() => {\n                setColor(color);\n              }}\n              style={{\n                backgroundColor: color,\n                height: \"19px\",\n                width: \"19px\",\n              }}\n            ></PaletteColorBtn>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default PaletteComp;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fabric } from \"fabric\";\nimport {\n  StyledCanvas,\n  PlayArea,\n  CanvasBackground,\n  Palette,\n  PngButton,\n  PaletteColors,\n  SmallBrushBtn,\n  MedBrushBtn,\n  LargeBrushBtn,\n  BrushSizesContainer,\n  SelectedColor,\n  AddTxtBtn,\n  ScrambleBtn,\n  DrawBtn,\n  WriteModeBtn,\n  EndGameBtn,\n  RoomHeader,\n  PaletteColorBtn,\n} from \"./AppCSS\";\nimport ChatBox from \"./ChatBox\"\nimport { Link, useHistory } from \"react-router-dom\";\n// import LinkButton from \"./LinkButton\";\nimport PaletteComp from \"./Palette\";\nimport socket from \"./Socket\";\nimport { fish } from \"./Icons\";\n\nimport EndGame from \"./EndGame\";\nimport SaveScribs from \"./SaveScribs\";\n\n// Canvas:\n// Writing Mode/ Scramble Mode\n// DrawingButton\n\n//storing color, brush size, font and canvas in state\n\nconst CombinedCanvas = () => {\n  const [canvas, setCanvas] = useState(\"\");\n  const [currColor, setColor] = useState(\"#005E7A\");\n  const [brushSize, setBrushSize] = useState(11);\n  const [font, setFont] = useState(\"arial\");\n  const [scribs, setScribs] = useState(\"\");\n  const room = useParams().room;\n  const history = useHistory();\n  const [players, setPlayers] = useState([]);\n\n  useEffect(() => {\n    socket.emit(\"get room players\", room);\n    console.log(\"canvas: get room players\");\n  }, [room]);\n\n  useEffect(() => {\n    socket.on(\"all players\", (playerList) => {\n      setPlayers(playerList);\n    });\n    return () => socket.off(\"all players\");\n  });\n\n  //creates initial canvas\n  useEffect(() => {\n    setCanvas(initCanvas());\n  }, []);\n\n  useEffect(() => {\n    if (canvas) {\n      updateBrush();\n\n      socket.on(\"load new lines\", (value) => {\n        console.log(\"drawing received in front end: \", value);\n        canvas.loadFromJSON(value);\n        setCanvas(canvas);\n      });\n    } else if (canvas) {\n      socket.on(\"create new text box\", (value) => {\n        console.log(\"front end heard create new text box\");\n        canvas.loadFromJSON(value);\n        setCanvas(canvas);\n      });\n    }\n  }, [canvas]);\n\n  useEffect(() => {\n    if (currColor) {\n      updateBrush();\n      if (canvas) {\n        startDrawMode();\n      }\n    }\n  }, [currColor]);\n\n  useEffect(() => {\n    if (brushSize && canvas.freeDrawingBrush) {\n      updateBrush();\n    }\n    if (canvas) {\n      startDrawMode();\n    }\n  }, [brushSize]);\n\n  let drawingModeEl = document.getElementById(\"drawing-mode-selector\");\n\n  const initCanvas = () =>\n    new fabric.Canvas(\"canvas\", {\n      height: 600,\n      width: 800,\n      backgroundColor: \"white\",\n      isDrawingMode: true,\n    });\n\n  function updateBrush() {\n    if (canvas) {\n      if (!canvas.freeDrawingBrush) {\n        canvas.freeDrawingBrush = new fabric[drawingModeEl.value + \"Brush\"]();\n      }\n      let brush = canvas.freeDrawingBrush;\n      brush.width = brushSize || 11;\n      brush.color = currColor || \"#005E7A\";\n      setCanvas(canvas);\n    }\n  }\n\n  function clearCanvas() {\n    if (canvas) {\n      canvas.clear();\n      canvas.backgroundColor = \"white\";\n    }\n  }\n\n  function startDrawMode() {\n    canvas.isDrawingMode = true;\n  }\n  function startWriteMode() {\n    canvas.isDrawingMode = false;\n  }\n\n  function handleDraworWrite() {\n    console.log(\"handleDraworWrite triggered!\");\n    setCanvas(canvas);\n    let canvasJSON = canvas.toJSON();\n    console.log(\"front end emiting combinedCanvas:\", room, canvasJSON);\n    if (!canvas.isDrawingMode) {\n      socket.emit(\"add new text box\", { room, canvasJSON });\n    } else {\n      socket.emit(\"send new lines\", { room, canvasJSON });\n    }\n  }\n\n  // write a randomizer that randomizers the text functionality\n\n  // text logic\n  const handleTextBtn = () => {\n    //remove this when add logic to room/player\n    canvas.isDrawingMode = false;\n    const newText = new fabric.IText(\"Type here...\", {\n      left: 150,\n      top: 100,\n      isContentEditable: true,\n      fontFamily: font,\n    });\n    canvas.add(newText).renderAll();\n    setCanvas(canvas);\n    let canvasJSON = canvas.toJSON();\n    console.log(\"emitting inside handleText\");\n    socket.emit(\"send new lines\", { room, canvasJSON });\n  };\n\n  let finalDrawing;\n\n  function handleEndGame() {\n    setCanvas(canvas);\n    finalDrawing = canvas.toDataURL(\"image/png\");\n    setScribs(finalDrawing);\n    socket.emit(\"send final image\", finalDrawing);\n    console.log(\"scribs in combined canvas\", scribs);\n    // needed to send finalDrawing because react doesn't set scribs right away so wasn't sending image\n    // passing scribs down as props via history here instead of link!\n    history.push(\"/endgame\", { scribs: finalDrawing });\n  }\n\n  const changeFont = (evt) => {\n    setFont(evt.target.value);\n    canvas.getActiveObject().setSelectionStyles({\n      fontFamily: font,\n    });\n    canvas.renderAll();\n  };\n\n  return (\n//     <div>\n//       <Title2>ROOM: {params.room}</Title2>\n//       <Title2>{room}</Title2>\n    <div style={{ marginBottom: \"100px\" }}>\n      <RoomHeader>\n        <span\n          style={{ fontWeight: \"bold\", color: \"white\", marginRight: \"5px\" }}\n        >\n          Room:\n        </span>\n        <span style={{ color: \"white\" }}> {room} </span>\n        <span\n          style={{ fontWeight: \"bold\", color: \"white\", marginRight: \"5px\" }}\n        >\n          Players:\n        </span>\n        <span style={{ color: \"white\" }}>{players.join(\", \")}</span>\n      </RoomHeader>\n      <ChatBox room={room}/>\n      <PlayArea\n        onClick={() => {\n          handleDraworWrite();\n        }}\n      >\n        <CanvasBackground>\n          <StyledCanvas id=\"canvas\"></StyledCanvas>\n        </CanvasBackground>\n      </PlayArea>\n\n      <Palette>\n        {/* <div style={{ fontWeight: \"bold\" }}> Modes:</div> */}\n        <ScrambleBtn\n          title=\"Click me to move drawings!\"\n          onClick={() => startWriteMode()}\n        >\n          Scramble!\n        </ScrambleBtn>\n        {/* <DrawBtn onClick={() => startDrawMode()}>Draw</DrawBtn> */}\n        <WriteModeBtn onClick={() => startWriteMode()}>Edit Text</WriteModeBtn>\n        <BrushSizesContainer>\n          <div style={{ marginTop: \"2px\", marginRight: \"2px\" }}>\n            {/* Brush Sizes: */}\n          </div>\n          <SmallBrushBtn\n            onClick={() => {\n              setBrushSize(5);\n            }}\n          >\n            <img\n              src=\"/images/point.png\"\n              style={{ width: \"30%\" }}\n              alt=\"choose small paint brush\"\n            />\n          </SmallBrushBtn>\n          <MedBrushBtn\n            onClick={() => {\n              setBrushSize(15);\n            }}\n          >\n            <img\n              src=\"/images/point.png\"\n              style={{ width: \"90%\" }}\n              alt=\"choose medium paint brush\"\n            />\n          </MedBrushBtn>\n          <LargeBrushBtn\n            onClick={() => {\n              setBrushSize(35);\n            }}\n          >\n            <img\n              src=\"/images/point.png\"\n              style={{ height: \"90%\" }}\n              alt=\"choose large paint brush\"\n            />\n          </LargeBrushBtn>\n        </BrushSizesContainer>\n        <SelectedColor>\n          <div\n            id=\"selectedColor\"\n            style={{\n              backgroundColor: currColor,\n              height: \"35px\",\n              width: \"35px\",\n            }}\n          ></div>\n        </SelectedColor>\n        <PaletteColors>\n          <PaletteComp currColor={currColor} setColor={setColor} />\n        </PaletteColors>\n        <PngButton onClick={() => clearCanvas()}>\n          <img src=\"/images/trashBtn.png\" style={{ width: \"100%\" }} />\n        </PngButton>\n        <PngButton onClick={() => setColor(\"white\")}>\n          <img\n            src=\"/images/eraser3.png\"\n            style={{ width: \"100%\" }}\n            alt=\"eraser\"\n          />\n        </PngButton>\n      </Palette>\n      <Palette>\n        <div id=\"text-options\">\n          <span style={{ fontWeight: \"bold\" }}>Text Palette:{\"  \"}</span>\n\n          <label htmlFor=\"font-family\">Font:</label>\n          <select\n            id=\"font-family\"\n            value={font}\n            onChange={changeFont}\n            style={{ width: \"90px\", marginLeft: \"5px\" }}\n          >\n            <option value=\"Arial\">Arial</option>\n            <option value=\"comic sans ms\">Comic Sans MS</option>\n            <option value=\"impact\">Impact</option>\n            <option value=\"monaco\">Monaco</option>\n          </select>\n        </div>\n        <AddTxtBtn onClick={() => handleTextBtn()}>Add Text</AddTxtBtn>\n        <EndGameBtn onClick={() => handleEndGame()}>I'm Done!</EndGameBtn>\n      </Palette>\n    </div>\n  );\n};\n\nexport default CombinedCanvas;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport LandingPageComp from \"./LandingPage\";\nimport EndGame from \"./EndGame\";\nimport CombinedCanvas from \"./CombinedCanvas\";\n\nconst Routes = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={LandingPageComp} />\n        <Route path=\"/scramble/:room\" component={CombinedCanvas}/>\n        <Route path=\"/endgame\" component={EndGame}/>\n\n      </Switch>\n    </Router>\n  );\n};\n\nexport default Routes;\n","import React, { useEffect } from \"react\";\nimport { FooterStyle, Title3, MasterScramblers } from \"./AppCSS\";\nimport {\n  cotton,\n  crab,\n  whale,\n  firefly,\n  cat,\n  creature,\n  cake,\n  storm,\n  beet,\n  horse,\n  wasp,\n  flower,\n  unicorn,\n  watermelon,\n  coffee,\n  egg,\n} from \"./Icons\";\n\nfunction Footer() {\n  const krIcons = [cotton, creature, cake, storm, beet];\n  const mIcons = [crab, wasp, whale, creature, cotton]\n  const gIcons = [cat, whale, watermelon, egg, unicorn];\n  const keIcons = [firefly, flower, wasp];\n  const generalIcons = [\n    cotton,\n    crab,\n    whale,\n    firefly,\n    cat,\n    creature,\n    cake,\n    storm,\n    beet,\n  ];\n\n  const scramblize = (iconSet) => {\n    const max = iconSet.length;\n    let randomIconIdx = Math.floor(Math.random() * max);\n    return iconSet[randomIconIdx];\n  };\n\n  useEffect((iconSet) => {\n    scramblize((iconSet = generalIcons));\n  }, []);\n\n  return (\n    <div>\n      <FooterStyle>\n        <MasterScramblers>\n          <a href=\"https://www.linkedin.com/in/meghan-mcfarland/\">\n            <img\n              src={scramblize(mIcons)}\n              style={{ width: \"120px\", borderRadius: \"50%\" }}\n              alt=\"developer icon: meghan mcfarland\"\n            />\n          </a>\n          <Title3>Meghan McFarland</Title3>\n        </MasterScramblers>\n        <MasterScramblers>\n          <a href=\"https://www.linkedin.com/in/studiosok/\">\n            <img\n              src={scramblize(krIcons)}\n              style={{ width: \"120px\", borderRadius: \"50%\" }}\n              alt=\"developer icon: Kristen Studioso\"\n            />\n          </a>\n          <Title3>Kristen Studioso</Title3>\n        </MasterScramblers>\n        <MasterScramblers>\n          <a href=\"https://www.linkedin.com/in/ginamoffit/\">\n            <img\n              src={scramblize(gIcons)}\n              style={{ width: \"120px\", borderRadius: \"50%\" }}\n              alt=\"developer icon: Gina Moffitt\"\n            />\n          </a>\n          <Title3>Gina Moffit</Title3>\n        </MasterScramblers>\n        <MasterScramblers>\n          <a href=\"https://www.linkedin.com/in/kelseygreene17/\">\n            <img\n              src={scramblize(keIcons)}\n              style={{ width: \"120px\", borderRadius: \"50%\" }}\n              alt=\"developer icon: Kelsey Greene\"\n            />\n          </a>\n          <Title3>Kelsey Greene</Title3>\n        </MasterScramblers>\n        <MasterScramblers>\n          <a href=\"https://github.com/AthenaCapstone/ScribbleScramble\">\n            <img\n              src=\"/images/github.png\"\n              style={{ width: \"120px\" }}\n              alt=\"github repository\"\n            />\n          </a>\n          <Title3>Scribble Scramble © 2021</Title3>\n        </MasterScramblers>\n      </FooterStyle>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport Routes from \"./Routes\";\nimport { Body, Header, Title } from \"./AppCSS\";\nimport Footer from \"./Footer\";\n\nfunction App() {\n  return (\n    <div>\n      <Body className=\"App\">\n        <Header className=\"App-header\">\n          <Title>\n            <a href=\"/\">\n              <img src=\"/images/logoSm.png\" alt=\"scribble scramble logo\" />\n            </a>\n          </Title>\n        </Header>\n        <div>\n          <Routes />\n        </div>\n        <Footer />\n      </Body>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}