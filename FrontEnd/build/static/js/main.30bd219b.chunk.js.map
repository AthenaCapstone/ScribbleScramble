{"version":3,"sources":["AppCSS.js","Socket.js","WritingCanvas.js","utility/utilityProperties.js","Palette.js","DrawingCanvas.js","Icons.js","AvatarCarousel.js","LandingPage.js","EndGame.js","CombinedCanvas.js","Modal.js","Routes.js","Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Body","styled","div","process","Header","header","FooterStyle","footer","LandingPage","PlayArea","StyledModal","Title","Link","h1","Title2","h2","Title3","h3","Paragraph","p","MasterScramblers","StyledCanvas","canvas","CanvasBackground","Palette","BrushSizesContainer","SmallBrushBtn","button","MedBrushBtn","LargeBrushBtn","SelectedColor","PaletteColors","StartDrawImg","StartDrawBtn","ScrambleBtn","WriteModeBtn","DrawBtn","LandingBtns","LandingButton","PngButton","AddTxtBtn","DownloadBtn","EndGameBtn","socket","io","window","location","origin","withCredentials","on","console","log","WritingCanvas","useState","textCanvas","setTextCanvas","font","setFont","useEffect","Object","keys","length","value","loadFromJSON","fabric","Canvas","height","width","isContentEditable","id","htmlFor","onChange","evt","target","getActiveObject","setSelectionStyles","fontFamily","renderAll","onClick","newText","IText","left","top","add","canvasJSON","toJSON","emit","handleTextBtn","lightColors","red","orange","yellow","green","blue","purple","white","darkColors","dkred","dkorange","dkyellow","dkgreen","dkblue","dkpurple","black","PaletteComp","currColor","setColor","values","map","color","style","backgroundColor","DrawingCanvas","setCanvas","brushSize","setBrushSize","initCanvas","updateBrush","freeDrawingBrush","drawingModeEl","document","getElementById","isDrawingMode","brush","drawingCanvasJSON","handleDraw","marginRight","fontWeight","fontSize","marginTop","src","clear","cotton","crab","firefly","whale","AvatarCarousel","naturalSlideWidth","naturalSlideHeight","totalSlides","infinite","index","alt","LandingPageComp","username","setUsername","roomToJoin","setRoomToJoin","history","useHistory","name","room","push","type","trim","alert","EndGame","finalImg","to","CombinedCanvas","params","useParams","startWriteMode","finalDrawing","in","handleDraworWrite","toDataURL","ModalComp","isOpen","setIsOpen","toggleModal","onLoad","setTimeout","Routes","exact","path","component","Footer","href","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.30bd219b.chunk.js","sourcesContent":["import styled from \"styled-components\";\n// import Modal from \"styled-react-modal\";\nimport { BrowserRouter as Link } from \"react-router-dom\";\n\n/*\nSPACE IS INCLUDED FOR ADDITIONAL ELEMENTS TO BE ADDED IN\nTHEIR APPROPRIATE SECTIONS. PLEASE UPDATE TOC AS NEEDED.\n\n*** Table of Contents ***\n\n - Line 15: Container Elements\n - Line 70: Basic Elements\n - Line 110: Canvas Elements\n - Line 150: Image Elements\n - Line 180: Button Elements\n\n*/\n\n// Container Elements\n\nexport const Body = styled.div`\n  display: flex;\n  @media (max-width: 2650px) {\n    background-image: url(${process.env.PUBLIC_URL}/images/background.jpg);\n\n    flex-flow: column wrap;\n    width: 100%;\n  }\n  @media (max-width: 813px) {\n    background-image: url(${process.env.PUBLIC_URL}/images/background.jpg)\n      repeat;\n    width: 813px;\n    margin-right: 5px;\n  }\n`;\n\n// media query stuff not currently used by might be later\nconst size = {\n  mobileS: \"320px\",\n  mobileM: \"375px\",\n  mobileL: \"425px\",\n  tablet: \"768px\",\n  laptop: \"1024px\",\n  laptopL: \"1440px\",\n  desktop: \"2560px\",\n};\n\nexport const Header = styled.header`\n  background: #000000\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 150px;\n  border-radius: 20px;\n  no-repeat: true\n`;\n\nexport const FooterStyle = styled.footer`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #ecf6f0;\n  height: 215px;\n`;\n\nexport const LandingPage = styled.div`\n  background-color: #ecf6f0;\n  height: 550px;\n  display: flex;\n  justify-content: center;\n  width: 800px;\n  margin: auto;\n  margin-top: 25px;\n  margin-bottom: 80px;\n`;\n\nexport const PlayArea = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const StyledModal = styled.div`\n  width: 20rem;\n  height: 20rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\n// Basic Elements\nexport const StyledLink = styled(Link)`\n  color: white;\n  font-weight: bold;\n`;\n\nexport const Title = styled.h1`\n  font-size: 2em;\n  text-align: center;\n  color: #982649;\n  background-color: black;\n  width: 800px;\n  height: 145px;\n  margin: auto;\n  margin-top: 20px;\n  border-radius: 20px;\n`;\n\nexport const Title2 = styled.h2`\n  font-size: 2em;\n  text-align: center;\n  color: white;\n`;\n\nexport const Title3 = styled.h3`\n  font-size: 1em;\n  text-align: center;\n  color: black;\n`;\n\nexport const Paragraph = styled.p`\n  align-self: center;\n  position: absolute;\n  top: 40%;\n  font-size: 1.2em;\n  text-align: center;\n  color: black;\n`;\n\nexport const MasterScramblers = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 200px;\n  margin: auto;\n  margin-top: 15px;\n`;\n\n// Canvas Elements\n\nexport const StyledCanvas = styled.canvas`\n  width: 450px;\n  margin: auto;\n  border: 3px outset black;\n  border-radius: 3px;\n  z-index: 2;\n`;\n\nexport const CanvasBackground = styled.div`\n  display: flex;\n  width: 800px;\n  border-radius: 3px;\n  background: white;\n  z-index: 1;\n  margin-bottom: 10px;\n`;\n\n// container for all palette buttons\nexport const Palette = styled.div`\n  display: flex;\n  justify-content: center;\n  background: #4c9c8a;\n  align-items: center;\n  margin: auto;\n  margin-top: 10px;\n  margin-bottom: 15px;\n  border-radius: 8px;\n  @media (max-width: 2650px) {\n    width: 800px;\n    height: 50px;\n  }\n  @media (max-width: 813px) {\n    width: 600px;\n  }\n`;\n\n//container for just the color swatches portion of the palette\n\nexport const BrushSizesContainer = styled.div`\n  display: flex;\n  align-items: center;\n  height: 50px;\n  margin-left: 10px;\n`;\n\n//brush size buttons\nexport const SmallBrushBtn = styled.button`\n  height: 35px;\n  width: 35px;\n  border-radius: 6px;\n  border: 2px solid darkgrey;\n  background-color: #4c9c8a;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const MedBrushBtn = styled.button`\n  height: 35px;\n  width: 35px;\n  border-radius: 6px;\n  border: 2px solid darkgrey;\n  background-color: #4c9c8a;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const LargeBrushBtn = styled.button`\n  height: 35px;\n  width: 35px;\n  border-radius: 6px;\n  border: 2px solid darkgrey;\n  background-color: #4c9c8a;\n  margin-right: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const SelectedSize = styled.div`\n  border-size: 5px;\n  border-color: black;\n`;\n\nexport const SelectedColor = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: 0px;\n`;\n\nexport const PaletteColors = styled.div`\n  margin: 5px;\n  margin-left: 8px;\n  margin-right: 0px;\n`;\n\nexport const PaletteBtns = styled.div`\n  margin-top: 10px;\n`;\n\n// Image Elements\n\nexport const StartDrawImg = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 25%;\n  height: 50%;\n`;\n\nexport const StartWriteImg = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 10%;\n  height: 50%;\n`;\n\n// Button Elements\n\nexport const Button = styled.button`\n  border-radius: 3px;\n  border: 2px solid darkgrey;\n  align: center;\n  color: #216858\n  margin: 0 1em;\n  height: 30px;\n  width: 80px;\n  `;\n\nexport const StartDrawBtn = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nexport const StartWriteBtn = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nexport const ScrambleBtn = styled.button`\n  border-radius: 6px;\n  border: 2px solid darkgrey;\n  align: center;\n  margin-left: 5px;\n  height: 30px;\n  width: 90px;\n  background-color: #134d44;\n  color: white;\n  font-size: 12px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const WriteModeBtn = styled.button`\n  border-radius: 6px;\n  border: 2px solid darkgrey;\n  align: center;\n  margin-left: 5px;\n  height: 30px;\n  width: 79px;\n  background-color: #134d44;\n  color: white;\n  font-size: 12px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const DrawBtn = styled.button`\n  border-radius: 6px;\n  border: 2px solid darkgrey;\n  align: center;\n  margin-left: 5px;\n  height: 30px;\n  width: 80px;\n  background-color: #134d44;\n  color: white;\n  font-size: 12px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const LandingBtns = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  margin: 10px;\n  margin-top: 5px;\n`;\n\nexport const LandingButton = styled.button`\n  border-radius: 6px;\n  border: 2px solid darkgrey;\n  align: center;\n  margin: 0 1em;\n  padding: 15px;\n  background-color: #134d44;\n  color: white;\n  font-size: 1.2em;\n  font-weight: bold;\n  height: 45px;\n  width: 223px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const ClearButton = styled.button`\n  border-radius: 6px;\n  border: 2px solid darkgrey;\n  align: center;\n  margin: 0 1em;\n  margin-top: 10px;\n  height: 28px;\n  width: 55px;\n  background-color: #134d44;\n  color: white;\n`;\n\nexport const PngButton = styled.button`\n  border-radius: 6px;\n  border: 2px solid darkgrey;\n  align: center;\n  margin-left: 5px;\n  height: 36px;\n  width: 36px;\n  background-color: #4c9c8a;\n  color: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const AddTxtBtn = styled.button`\n  border-radius: 6px;\n  border: 2px solid darkgrey;\n  align: center;\n  margin: 0 1em;\n  margin-top: 5px;\n  height: 28px;\n  width: 80px;\n  background-color: #134d44;\n  color: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const DownloadBtn = styled.button`\n  border-radius: 6px;\n  border: 2px solid darkgrey;\n  align: center;\n  position: absolute;\n  top: 50%;\n  height: 10%;\n  width: 15%;\n  background-color: #134d44;\n  color: white;\n  font-size: 1.2em;\n  font-weight: bold;\n`;\n\nexport const EndGameBtn = styled.button`\n  border-radius: 6px;\n  border: 2px solid darkgrey;\n  align: center;\n  margin: 0 1em;\n  margin-top: 5px;\n  height: 28px;\n  width: 80px;\n  background-color: #134d44;\n  color: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import * as io from \"socket.io-client\";\n\nconst socket = io(window.location.origin, {\n  withCredentials: true,\n  // transports: [\"websocket\"]\n  //^^TECHNICALLY NEEDED - currently throwing errors. don't delete. yet.\n});\n\nsocket.on(\"connect\", () => {\n  console.log(\"FE: socket 'on connect' ->  connected to server!\");\n});\n\nexport default socket;\n","import React, { useState, useEffect } from \"react\";\nimport { fabric } from \"fabric\";\nimport { Title2, Palette, AddTxtBtn } from \"./AppCSS\";\nimport { StyledCanvas } from \"./AppCSS\";\nimport { PlayArea } from \"./AppCSS\";\nimport { CanvasBackground } from \"./AppCSS\";\nimport socket from \"./Socket\";\n\nconst WritingCanvas = () => {\n  const initCanvas = () => {\n    const newCanvas = new fabric.Canvas(\"canvas\", {\n      height: 600,\n      width: 800,\n      isContentEditable: true,\n    });\n\n    return newCanvas;\n  };\n  const [textCanvas, setTextCanvas] = useState({});\n  const [font, setFont] = useState(\"arial\");\n\n  useEffect(() => {\n    if (!Object.keys(textCanvas).length) {\n      setTextCanvas(initCanvas());\n    } else {\n      socket.on(\"create new text box\", (value) => {\n        console.log(\"front end heard create new text box\");\n        textCanvas.loadFromJSON(value);\n        setTextCanvas(textCanvas);\n      });\n    }\n  }, [textCanvas]);\n\n  const handleTextBtn = () => {\n    const newText = new fabric.IText(\"Type here...\", {\n      left: 150,\n      top: 100,\n      isContentEditable: true,\n      fontFamily: font,\n    });\n\n    setTextCanvas(textCanvas.add(newText).renderAll());\n    let canvasJSON = textCanvas.toJSON();\n    socket.emit(\"add text box\", canvasJSON);\n  };\n\n  const changeFont = (evt) => {\n    setFont(evt.target.value);\n    textCanvas.getActiveObject().setSelectionStyles({\n      fontFamily: font,\n    });\n    textCanvas.renderAll();\n  };\n\n  return (\n    <div>\n      <Title2></Title2>\n\n      <PlayArea>\n        <CanvasBackground>\n          <StyledCanvas id=\"canvas\"></StyledCanvas>\n        </CanvasBackground>\n      </PlayArea>\n      <Palette>\n        <div id=\"text-options\">\n          <label htmlFor=\"font-family\">Font:</label>\n          <select id=\"font-family\" value={font} onChange={changeFont}>\n            <option value=\"Arial\">Arial</option>\n            <option value=\"comic sans ms\">Comic Sans MS</option>\n            <option value=\"impact\">Impact</option>\n            <option value=\"monaco\">Monaco</option>\n          </select>\n        </div>\n        <AddTxtBtn onClick={() => handleTextBtn()}>Add Text</AddTxtBtn>\n      </Palette>\n    </div>\n  );\n};\n\nexport default WritingCanvas;\n","// lightColors[color]\nexport const lightColors = {\n  red: \"#FE797B\",\n  orange: \"#FFB750\",\n  yellow: \"#FFEA56\",\n  green: \"#8FE968\",\n  blue: \"#36CEDC\",\n  purple: \"#A587CA\",\n  white: \"white\",\n};\n\nexport const darkColors = {\n  dkred: \"#C1301C\",\n  dkorange: \"#C96112\",\n  dkyellow: \"#C4A705\",\n  dkgreen: \"#177245\",\n  dkblue: \"#2E5793\",\n  dkpurple: \"#4B2882\",\n  black: \"black\",\n};\n\nconst sizes = {\n  small: {\n    name: \"brushSize\",\n    value: \"5\",\n    icon: \"/images/point.png\",\n    size: \"35%\",\n  },\n\n  medium: {\n    name: \"brushSize\",\n    value: \"10\",\n    icon: \"/images/point.png\",\n    size: \"60%\",\n  },\n\n  large: {\n    name: \"brushSize\",\n    value: \"20\",\n    icon: \"/images/point.png\",\n    size: \"95%\",\n  },\n};\n\nexport const iconBackgrounds = [\n  \"red\",\n  \"orange\",\n  \"yellow\",\n  \"green\",\n  \"blue\",\n  \"purple\",\n];\n","import React, { useState, useEffect } from \"react\";\nimport { lightColors, darkColors, tools } from \"./utility/utilityProperties.js\";\n\nconst PaletteComp = ({ currColor, setColor }) => {\n  return (\n    <div id=\"palette\">\n      <div>\n        {Object.values(lightColors).map((color) => {\n          return (\n            <button\n              key={color}\n              onClick={() => {\n                setColor(color);\n              }}\n              style={{\n                backgroundColor: color,\n                height: \"19px\",\n                width: \"19px\",\n              }}\n            ></button>\n          );\n        })}\n      </div>\n      <div>\n        {Object.values(darkColors).map((color) => {\n          return (\n            <button\n              key={color}\n              onClick={() => {\n                setColor(color);\n              }}\n              style={{\n                backgroundColor: color,\n                height: \"19px\",\n                width: \"19px\",\n              }}\n            ></button>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default PaletteComp;\n","import React, { useState, useEffect } from \"react\";\nimport { fabric } from \"fabric\";\nimport {\n  Title2,\n  StyledCanvas,\n  PlayArea,\n  CanvasBackground,\n  Palette,\n  PngButton,\n  PaletteColors,\n  SmallBrushBtn,\n  MedBrushBtn,\n  LargeBrushBtn,\n  BrushSizesContainer,\n  SelectedColor,\n} from \"./AppCSS\";\nimport PaletteComp from \"./Palette\";\nimport socket from \"./Socket\";\n\n//storing color, brush size and canvas in state\n\nconst DrawingCanvas = () => {\n  const [canvas, setCanvas] = useState(\"\");\n  const [currColor, setColor] = useState(\"#005E7A\");\n  const [brushSize, setBrushSize] = useState(11);\n\n  //creates initial canvas\n  useEffect(() => {\n    setCanvas(initCanvas());\n  }, []);\n\n  // when canvas is first created we initialize the brush\n  // if canvas changes we convert it to JSON\n  //and send that over sockets\n  // however UseEffect does not know when we're drawing\n  // because we don't have need a change handler to draw so we don't set the canvas\n  // when we do, so the canvas in state doesn't update\n\n  useEffect(() => {\n    if (canvas) {\n      updateBrush();\n\n      socket.on(\"load new lines\", (value) => {\n        console.log(\"drawing received in front end: \", value);\n        canvas.loadFromJSON(value);\n        setCanvas(canvas);\n      });\n    }\n  }, [canvas]);\n\n  useEffect(() => {\n    console.log(\"canvas is updating\", canvas);\n    if (canvas) {\n      // let drawingCanvasJSON = canvas.toJSON();\n      // console.log(\"front end emiting drawingtoJSON:\", drawingCanvasJSON);\n      // socket.emit(\"send new lines\", drawingCanvasJSON);\n    }\n  }, [canvas]);\n\n  useEffect(() => {\n    if (currColor) {\n      updateBrush();\n    }\n  }, [currColor]);\n\n  useEffect(() => {\n    if (brushSize && canvas.freeDrawingBrush) {\n      updateBrush();\n    }\n  }, [brushSize]);\n\n  let drawingModeEl = document.getElementById(\"drawing-mode-selector\");\n\n  const initCanvas = () =>\n    new fabric.Canvas(\"canvas\", {\n      height: 600,\n      width: 800,\n      backgroundColor: \"white\",\n      isDrawingMode: true,\n    });\n\n  function updateBrush() {\n    if (canvas) {\n      if (!canvas.freeDrawingBrush) {\n        canvas.freeDrawingBrush = new fabric[drawingModeEl.value + \"Brush\"]();\n      }\n      let brush = canvas.freeDrawingBrush;\n      brush.width = brushSize || 11;\n      brush.color = currColor || \"#005E7A\";\n      setCanvas(canvas);\n    }\n  }\n\n  function handleDraw() {\n    console.log(\"handleDraw triggered!\");\n    setCanvas(canvas);\n    let drawingCanvasJSON = canvas.toJSON();\n    console.log(\"front end emiting drawingtoJSON:\", drawingCanvasJSON);\n    // socket.emit(\"send new lines\", drawingCanvasJSON);\n    socket.emit(\"send new lines\", drawingCanvasJSON);\n  }\n\n  return (\n    <div>\n      <Title2></Title2>\n      <PlayArea\n        onClick={() => {\n          handleDraw();\n        }}\n      >\n        <CanvasBackground>\n          <StyledCanvas id=\"canvas\"></StyledCanvas>\n        </CanvasBackground>\n      </PlayArea>\n\n      <Palette>\n        <div id=\"drawing-mode-options\">\n          <label\n            htmlFor=\"drawing-mode-selector\"\n            style={{ marginRight: \"8px\", fontWeight: \"bold\", fontSize: \"14px\" }}\n          >\n            Brushes:\n          </label>\n          <select id=\"drawing-mode-selector\" onChange={() => updateBrush()}>\n            <option value=\"Pencil\">Pencil</option>\n            <option value=\"Circle\">Circle</option>\n            <option value=\"Pattern\">Pattern</option>\n          </select>\n        </div>\n        <BrushSizesContainer>\n          <div style={{ marginTop: \"2px\", marginRight: \"2px\" }}>\n            {/* Brush Sizes: */}\n          </div>\n          <SmallBrushBtn\n            onClick={() => {\n              setBrushSize(5);\n            }}\n          >\n            <img src=\"/images/point.png\" style={{ width: \"30%\" }} />\n          </SmallBrushBtn>\n          <MedBrushBtn\n            onClick={() => {\n              setBrushSize(15);\n            }}\n          >\n            <img src=\"/images/point.png\" style={{ width: \"90%\" }} />\n          </MedBrushBtn>\n          <LargeBrushBtn\n            onClick={() => {\n              setBrushSize(35);\n            }}\n          >\n            <img src=\"/images/point.png\" style={{ height: \"90%\" }} />\n          </LargeBrushBtn>\n        </BrushSizesContainer>\n        <SelectedColor>\n          <div\n            id=\"selectedColor\"\n            style={{\n              backgroundColor: currColor,\n              height: \"30px\",\n              width: \"30px\",\n            }}\n          ></div>\n        </SelectedColor>\n        <PaletteColors>\n          <PaletteComp currColor={currColor} setColor={setColor} />\n        </PaletteColors>\n\n        <PngButton onClick={() => canvas.clear()}>\n          <img\n            src=\"/images/trashBtn.png\"\n            style={{ width: \"100%\", marginTop: \"2px\" }}\n          />\n        </PngButton>\n        <PngButton onClick={() => setColor(\"white\")}>\n          <img\n            src=\"/images/eraser3.png\"\n            style={{ width: \"100%\", marginTop: \"2px\" }}\n          />\n        </PngButton>\n      </Palette>\n\n      <div>test!</div>\n    </div>\n  );\n};\n\nexport default DrawingCanvas;\n","export const bird = process.env.PUBLIC_URL + \"/images/avatars/bird.jpg\";\n\nexport const cake = process.env.PUBLIC_URL + \"/images/avatars/cake.jpg\";\n\nexport const catzoom = process.env.PUBLIC_URL + \"/images/avatars/catzoom.jpg\";\n\nexport const cotton = process.env.PUBLIC_URL + \"/images/avatars/cotton.jpg\";\n\nexport const crab = process.env.PUBLIC_URL + \"/images/avatars/crab.jpg\";\n\nexport const deer = process.env.PUBLIC_URL + \"/images/avatars/deer.jpg\";\n\nexport const firefly = process.env.PUBLIC_URL + \"/images/avatars/firefly.jpg\";\n\nexport const fish = process.env.PUBLIC_URL + \"/images/avatars/fish.jpg\";\n\nexport const icecream = process.env.PUBLIC_URL + \"/images/avatars/icecream.jpg\";\n\nexport const pizza = process.env.PUBLIC_URL + \"/images/avatars/pizza.jpg\";\n\nexport const sandwich = process.env.PUBLIC_URL + \"/images/avatars/sandwich.jpg\";\n\nexport const spiderman =\n  process.env.PUBLIC_URL + \"/images/avatars/spiderman.jpg\";\n\nexport const storm = process.env.PUBLIC_URL + \"/images/avatars/storm.jpg\";\n\nexport const taxi = process.env.PUBLIC_URL + \"/images/avatars/taxi.jpg\";\n\nexport const tomato = process.env.PUBLIC_URL + \"/images/avatars/tomato.jpg\";\n\nexport const violin = process.env.PUBLIC_URL + \"/images/avatars/violin.jpg\";\n\nexport const whale = process.env.PUBLIC_URL + \"/images/avatars/whale.jpg\";\n\n//   cake: <img src=\"../public/avatars/images/cake.jpg\" />,\n//   catzoom: <img src=\"../public/avatars/images/catzoom.jpg\" />,\n//   cotton: <img src=\"../public/avatars/images/cotton.jpg\" />,\n// };\n\n// export default icons;\n","import React, { useState } from \"react\";\nimport \"pure-react-carousel/dist/react-carousel.es.css\";\nimport {\n  CarouselProvider,\n  Slider,\n  Slide,\n  ButtonBack,\n  ButtonNext,\n  Image,\n} from \"pure-react-carousel\";\n\nimport {\n  bird,\n  cake,\n  catzoom,\n  cotton,\n  crab,\n  deer,\n  firefly,\n  fish,\n  icecream,\n  pizza,\n  sandwich,\n  spiderman,\n  storm,\n  taxi,\n  tomato,\n  violin,\n  whale,\n} from \"./Icons\";\nimport { LandingPage } from \"./AppCSS\";\n\nconst AvatarCarousel = () => {\n  return (\n    <CarouselProvider\n      naturalSlideWidth={1}\n      naturalSlideHeight={1}\n      totalSlides={17}\n      infinite={true}\n    >\n      <Slider>\n        <Slide index={0}>\n          <Image src={bird} alt=\"bird\" />\n        </Slide>\n        <Slide index={1}>\n          <Image src={cake} alt=\"cake\" />\n        </Slide>\n        <Slide index={2}>\n          <Image src={catzoom} alt=\"catzoom\" />\n        </Slide>\n        <Slide index={3}>\n          <Image src={cotton} alt=\"cotton\" />\n        </Slide>\n        <Slide index={4}>\n          <Image src={crab} alt=\"crab\" />\n        </Slide>\n        <Slide index={5}>\n          <Image src={deer} alt=\"deer\" />\n        </Slide>\n        <Slide index={6}>\n          <Image src={firefly} alt=\"firefly\" />\n        </Slide>\n        <Slide index={7}>\n          <Image src={fish} alt=\"fish\" />\n        </Slide>\n        <Slide index={8}>\n          <Image src={icecream} alt=\"icecream\" />\n        </Slide>\n        <Slide index={9}>\n          <Image src={pizza} alt=\"pizza\" />\n        </Slide>\n        <Slide index={10}>\n          <Image src={sandwich} alt=\"sandwich\" />\n        </Slide>\n        <Slide index={11}>\n          <Image src={spiderman} alt=\"spiderman\" />\n        </Slide>\n        <Slide index={12}>\n          <Image src={storm} alt=\"storm\" />\n        </Slide>\n        <Slide index={13}>\n          <Image src={taxi} alt=\"taxi\" />\n        </Slide>\n        <Slide index={14}>\n          <Image src={tomato} alt=\"tomato\" />\n        </Slide>\n        <Slide index={15}>\n          <Image src={violin} alt=\"violin\" />\n        </Slide>\n        <Slide index={16}>\n          <Image src={whale} alt=\"whale\" />\n        </Slide>\n      </Slider>\n\n      <ButtonBack>Back</ButtonBack>\n      <ButtonNext>Next</ButtonNext>\n    </CarouselProvider>\n  );\n};\nexport default AvatarCarousel;\n","import { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  StartDrawBtn,\n  StartWriteBtn,\n  LandingButton,\n  LandingBtns,\n  LandingPage,\n  StartDrawImg,\n  StartWriteImg,\n} from \"./AppCSS\";\nimport socket from \"./Socket\";\nimport AvatarCarousel from \"./AvatarCarousel\";\n\nconst LandingPageComp = () => {\n  const [username, setUsername] = useState(\"scribbling\");\n  const [roomToJoin, setRoomToJoin] = useState(\"\");\n  const history = useHistory();\n\n  useEffect(() => {\n    socket.on(\"new room created\", (name) => {\n      console.log(\"FE on: new room created:\", name);\n      socket.emit(\"join room\", { username, room: name });\n      history.push(`/scramble/${name}`);\n    });\n  });\n\n  const handleCreate = () => {\n    socket.emit(\"add new player\", username);\n    console.log(\"FE: emit create new room\");\n    socket.emit(\"create new room\", username);\n  };\n\n  const handleJoin = () => {\n    socket.emit(\"add new player\", username);\n    console.log(\"FE emit add new player\");\n    if (roomToJoin) {\n      socket.emit(\"join room\", { username, room: roomToJoin });\n      history.push(`scramble/${roomToJoin}`);\n    } else {\n      alert(\"please enter a room name\");\n    }\n  };\n\n  return (\n    <div>\n      <LandingPage>\n        <AvatarCarousel />\n        <LandingBtns>\n          <h6>Please choose a username:</h6>\n          <input\n            type=\"text\"\n            name=\"username\"\n            onChange={(evt) => setUsername(evt.target.value.trim())}\n          />\n        </LandingBtns>\n\n        <LandingBtns>\n          <h6>create a room</h6>\n          <StartDrawBtn>\n            <StartDrawImg />\n            <LandingButton type=\"button\" onClick={handleCreate}>\n              SCRIBBLE MY SCRAMBLES\n            </LandingButton>\n          </StartDrawBtn>\n        </LandingBtns>\n\n        <LandingBtns>\n          <h6>have a room name?</h6>\n          <input\n            type=\"text\"\n            name=\"join-a-room\"\n            onChange={(evt) => setRoomToJoin(evt.target.value.trim())}\n          />\n          <StartDrawBtn>\n            <StartDrawImg />\n            <LandingButton type=\"button\" onClick={handleJoin}>\n              MY SCRAMBLES ARE SCRIBBLED\n            </LandingButton>\n          </StartDrawBtn>\n        </LandingBtns>\n      </LandingPage>\n    </div>\n  );\n};\n\nexport default LandingPageComp;\n","import React, { useState, useEffect } from \"react\";\nimport Routes from \"./Routes\";\nimport { LandingPage, Paragraph, DownloadBtn } from \"./AppCSS\";\nimport { fabric } from \"fabric\";\n\nimport { Link } from \"react-router-dom\";\nimport socket from \"./Socket\";\n\nconst EndGame = () => {\n  const [canvas, setCanvas] = useState(\"\");\n\n  //   socket.on(\"send final image\");\n  let finalImg;\n\n  socket.on(\"broadcasting final image\", (value) => {\n    finalImg = value;\n    console.log(\"finalImg---->\", finalImg);\n  });\n\n  const handleDownloadBtn = () => {\n    console.log(\"clicked download\");\n  };\n\n  return (\n    <LandingPage>\n      <h1>Thanks For Playing!</h1>\n      <Paragraph>Save your ScribScrab?</Paragraph>\n      <DownloadBtn onClick={() => handleDownloadBtn()}>Download</DownloadBtn>\n      <Link to=\"/\">Play Again?</Link>\n      <div>{finalImg}</div>\n    </LandingPage>\n  );\n};\n\nexport default EndGame;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fabric } from \"fabric\";\nimport {\n  Title2,\n  StyledCanvas,\n  PlayArea,\n  CanvasBackground,\n  Palette,\n  PngButton,\n  PaletteColors,\n  SmallBrushBtn,\n  MedBrushBtn,\n  LargeBrushBtn,\n  BrushSizesContainer,\n  SelectedColor,\n  AddTxtBtn,\n  ScrambleBtn,\n  DrawBtn,\n  WriteModeBtn,\n  EndGameBtn,\n} from \"./AppCSS\";\nimport { Link } from \"react-router-dom\";\n\nimport PaletteComp from \"./Palette\";\nimport socket from \"./Socket\";\n\n// Canvas:\n// Writing Mode/ Scramble Mode\n// DrawingButton\n\n//storing color, brush size, font and canvas in state\n\nconst CombinedCanvas = () => {\n  const [canvas, setCanvas] = useState(\"\");\n  const [currColor, setColor] = useState(\"#005E7A\");\n  const [brushSize, setBrushSize] = useState(11);\n  const [font, setFont] = useState(\"arial\");\n  const params = useParams();\n  const room = useParams().room;\n\n  //creates initial canvas\n  useEffect(() => {\n    setCanvas(initCanvas());\n  }, []);\n\n  useEffect(() => {\n    if (canvas) {\n      updateBrush();\n\n      socket.on(\"load new lines\", (value) => {\n        console.log(\"drawing received in front end: \", value);\n        canvas.loadFromJSON(value);\n        setCanvas(canvas);\n      });\n    } else if (canvas) {\n      socket.on(\"create new text box\", (value) => {\n        console.log(\"front end heard create new text box\");\n        canvas.loadFromJSON(value);\n        setCanvas(canvas);\n      });\n    }\n  }, [canvas]);\n\n  useEffect(() => {\n    if (currColor) {\n      updateBrush();\n    }\n  }, [currColor]);\n\n  useEffect(() => {\n    if (brushSize && canvas.freeDrawingBrush) {\n      updateBrush();\n    }\n  }, [brushSize]);\n\n  let drawingModeEl = document.getElementById(\"drawing-mode-selector\");\n\n  const initCanvas = () =>\n    new fabric.Canvas(\"canvas\", {\n      height: 600,\n      width: 800,\n      backgroundColor: \"white\",\n      isDrawingMode: true,\n    });\n\n  function updateBrush() {\n    if (canvas) {\n      if (!canvas.freeDrawingBrush) {\n        canvas.freeDrawingBrush = new fabric[drawingModeEl.value + \"Brush\"]();\n      }\n      let brush = canvas.freeDrawingBrush;\n      brush.width = brushSize || 11;\n      brush.color = currColor || \"#005E7A\";\n      setCanvas(canvas);\n    }\n  }\n\n  // function toggleDrawingMode() {\n  //   canvas.isDrawingMode = !canvas.isDrawingMode;\n  // }\n\n  function startDrawMode() {\n    canvas.isDrawingMode = true;\n  }\n  function startWriteMode() {\n    canvas.isDrawingMode = false;\n  }\n\n  function handleDraworWrite() {\n    console.log(\"handleDraworWrite triggered!\");\n    setCanvas(canvas);\n    let canvasJSON = canvas.toJSON();\n    console.log(\"front end `emit`ing combinedCanvas:\", canvasJSON);\n    socket.in(room).emit(\"send new lines\", canvasJSON);\n  }\n\n  // write a randomizer that randomizers the text functionality\n\n  // text logic\n  const handleTextBtn = () => {\n    //remove this when add logic to room/player\n    canvas.isDrawingMode = false;\n    const newText = new fabric.IText(\"Type here...\", {\n      left: 150,\n      top: 100,\n      isContentEditable: true,\n      fontFamily: font,\n    });\n    canvas.add(newText).renderAll();\n    setCanvas(canvas);\n    let canvasJSON = canvas.toJSON();\n    console.log(\"emitting inside handleText\");\n    socket.in(room).emit(\"send new lines\", canvasJSON);\n  };\n\n  let finalDrawing;\n\n  function handleEndGame() {\n    setCanvas(canvas);\n\n    finalDrawing = canvas.toDataURL();\n    // finalDrawing = canvas.discardActiveObject().renderAll().toDataURL(\"png\");\n    // finalDrawing = canvas.toSVG();\n    //  finalDrawing = canvas.toJSON();\n    // finalDrawing = canvas.toJSON({format: 'png'});\n\n    socket.in(room).emit(\"send final image\", finalDrawing);\n  }\n\n  const changeFont = (evt) => {\n    setFont(evt.target.value);\n    canvas.getActiveObject().setSelectionStyles({\n      fontFamily: font,\n    });\n    canvas.renderAll();\n  };\n\n  return (\n    <div>\n      <Title2>ROOM: {params.room}</Title2>\n      <Title2>{room}</Title2>\n      <PlayArea\n        onClick={() => {\n          handleDraworWrite();\n        }}\n      >\n        <CanvasBackground>\n          <StyledCanvas id=\"canvas\"></StyledCanvas>\n        </CanvasBackground>\n      </PlayArea>\n\n      <Palette>\n        <ScrambleBtn onClick={() => startWriteMode()}>Scramble</ScrambleBtn>\n        <DrawBtn onClick={() => startDrawMode()}>Draw</DrawBtn>\n        <WriteModeBtn onClick={() => startWriteMode()}>Write</WriteModeBtn>\n\n        {/* <div id=\"drawing-mode-options\">\n          <label\n            htmlFor=\"drawing-mode-selector\"\n            style={{ marginRight: \"8px\", fontWeight: \"bold\", fontSize: \"14px\" }}\n          >\n            Drawing Modes:\n          </label>\n          <select id=\"drawing-mode-selector\">\n            <option value=\"Drawing\">Draw Mode</option>\n            <option value=\"Writing\">Write Mode</option>\n            <option value=\"Scramble\">Scramble Mode</option>\n          </select>\n        </div> */}\n        <BrushSizesContainer>\n          <div style={{ marginTop: \"2px\", marginRight: \"2px\" }}>\n            {/* Brush Sizes: */}\n          </div>\n          <SmallBrushBtn\n            onClick={() => {\n              setBrushSize(5);\n            }}\n          >\n            <img src=\"/images/point.png\" style={{ width: \"30%\" }} />\n          </SmallBrushBtn>\n          <MedBrushBtn\n            onClick={() => {\n              setBrushSize(15);\n            }}\n          >\n            <img src=\"/images/point.png\" style={{ width: \"90%\" }} />\n          </MedBrushBtn>\n          <LargeBrushBtn\n            onClick={() => {\n              setBrushSize(35);\n            }}\n          >\n            <img src=\"/images/point.png\" style={{ height: \"90%\" }} />\n          </LargeBrushBtn>\n        </BrushSizesContainer>\n        <SelectedColor>\n          <div\n            id=\"selectedColor\"\n            style={{\n              backgroundColor: currColor,\n              height: \"35px\",\n              width: \"35px\",\n            }}\n          ></div>\n        </SelectedColor>\n        <PaletteColors>\n          <PaletteComp currColor={currColor} setColor={setColor} />\n        </PaletteColors>\n        <PngButton onClick={() => canvas.clear()}>\n          <img src=\"/images/trashBtn.png\" style={{ width: \"100%\" }} />\n        </PngButton>\n        <PngButton onClick={() => setColor(\"white\")}>\n          <img src=\"/images/eraser3.png\" style={{ width: \"100%\" }} />\n        </PngButton>\n      </Palette>\n      <Palette>\n        {/* <WriteModeBtn onClick={() => startWriteMode()}>Write Mode</WriteModeBtn> */}\n        <div id=\"text-options\">\n          <span style={{ fontWeight: \"bold\" }}>Text Palette:{\"  \"}</span>\n\n          <label htmlFor=\"font-family\">Font:</label>\n          <select id=\"font-family\" value={font} onChange={changeFont}>\n            <option value=\"Arial\">Arial</option>\n            <option value=\"comic sans ms\">Comic Sans MS</option>\n            <option value=\"impact\">Impact</option>\n            <option value=\"monaco\">Monaco</option>\n          </select>\n        </div>\n        <AddTxtBtn onClick={() => handleTextBtn()}>Add Text</AddTxtBtn>\n        <EndGameBtn onClick={() => handleEndGame()}>\n          <Link to=\"/endgame\" style={{ color: \"white\" }}>\n            I'm Done!\n          </Link>\n        </EndGameBtn>\n      </Palette>\n    </div>\n  );\n};\n\nexport default CombinedCanvas;\n","import React, { useState, useEffect } from \"react\"\n// import Modal from \"styled-react-modal\"\nimport { StyledModal } from \"./AppCSS\"\n\nconst ModalComp = () => {\n    const [isOpen, setIsOpen] = useState(false)\n\n    const toggleModal = () => {\n        setIsOpen(!isOpen)\n    }\n\n    const timer = () => {\n        setTimeout(toggleModal, 10000)\n        console.log('timer has run')\n    }\n\n    useEffect(() => {\n        toggleModal()\n    }, [])\n\n    return (\n        <div>\n\n            <StyledModal\n                isOpen={isOpen}\n                onLoad={timer()}\n            >Game starts in 10 seconds!</StyledModal>\n        </div>\n    )\n}\n\nexport default ModalComp","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport WritingCanvas from \"./WritingCanvas\";\nimport DrawingCanvas from \"./DrawingCanvas\";\nimport LandingPageComp from \"./LandingPage\";\nimport EndGame from \"./EndGame\";\nimport CombinedCanvas from \"./CombinedCanvas\";\n// Importing Modal for testing\nimport ModalComp from \"./Modal\";\n\nconst Routes = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={LandingPageComp} />\n        <Route path=\"/write\" component={WritingCanvas} />\n        <Route path=\"/draw\" component={DrawingCanvas} />\n        <Route path=\"/end\" component={EndGame} />\n        <Route path=\"/scramble/:room\" component={CombinedCanvas} />\n        {/* Route for testing Modal component */}\n        <Route path=\"/testing\" component={ModalComp} />\n        <Route path=\"/endgame\" component={EndGame} />\n      </Switch>\n      f\n    </Router>\n  );\n};\n\nexport default Routes;\n","import React, { useState } from \"react\";\nimport Routes from \"./Routes\";\nimport { Body, FooterStyle, Title3, MasterScramblers } from \"./AppCSS\";\nimport { cotton, crab, whale, firefly } from './Icons'\n\nfunction Footer() {\n\n  \n    return (\n        <div>\n        <FooterStyle>\n        <MasterScramblers>\n            <a href=\"/\">\n              <img src={crab} />\n            </a>\n            <Title3>Meghan McFarland</Title3>\n            </MasterScramblers>\n            <MasterScramblers>\n            <a href=\"/\">\n              <img src={cotton} />\n            </a> \n            <Title3>Kristen Studioso</Title3>\n            </MasterScramblers>\n            <MasterScramblers>\n            <a href=\"/\">\n              <img src={whale} />\n            </a>\n            <Title3>Gina Moffit</Title3>\n            </MasterScramblers>\n            <MasterScramblers>\n            <a href=\"/\">\n              <img src={firefly} />\n            </a>\n            <Title3>Kelsey Greene</Title3>\n            </MasterScramblers>\n        </FooterStyle>\n        \n        </div>\n      \n    );\n  }\n  \n  export default Footer;\n  \n","import React, { useState } from \"react\";\nimport Routes from \"./Routes\";\nimport { Body, Header, Title } from \"./AppCSS\";\nimport Footer from \"./Footer\"\n\n\nfunction App() {\n  const [loadClient, setLoadClient] = useState(true);\n\n  return (\n    <div>\n    <Body className=\"App\">\n      <Header className=\"App-header\">\n        <Title>\n          <a href=\"/\">\n            <img src=\"/images/logoSm.png\" />\n          </a>\n        </Title>\n      </Header>\n      <div>\n        <Routes />\n      </div>\n      <Footer />\n    </Body>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}