{"version":3,"sources":["AppCSS.js","Socket.js","WritingCanvas.js","DrawingCanvas.js","LandingPage.js","Routes.js","App.js","reportWebVitals.js","index.js"],"names":["Body","styled","div","Header","header","Title","Link","button","h1","Title2","h2","PlayArea","StyledCanvas","canvas","CanvasBackground","Palette","StartDrawBtn","StartDrawImg","StartWriteImg","StartWriteBtn","LandingPage","LandingBtns","LandingButton","PngButton","AddTxtBtn","socket","socketIOClient","on","console","log","WritingCanvas","useState","textCanvas","setTextCanvas","font","setFont","useEffect","Object","keys","length","value","loadFromJSON","fabric","Canvas","height","width","isContentEditable","id","style","marginTop","htmlFor","onChange","evt","target","getActiveObject","setSelectionStyles","fontFamily","renderAll","onClick","newText","IText","left","top","add","canvasJSON","toJSON","emit","handleTextBtn","DrawingCanvas","setCanvas","initCanvas","updateBrush","drawingColorEl","document","getElementById","drawingModeEl","drawingLineWidthEl","brushSizeText","backgroundColor","isDrawingMode","freeDrawingBrush","brush","parseInt","innerHTML","color","onMouseDown","type","defaultValue","min","max","clear","src","LandingPageComp","href","Routes","exact","path","component","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.31c2427f.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport { BrowserRouter as Link } from \"react-router-dom\";\n\nexport const Body = styled.div`\n  display: flex;\n  flex-flow: column wrap;\n  width: 100%;\n  background-image: url(./images/background.jpg);\n`;\n\nexport const Header = styled.header`\n  background: #000000\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 150px;\n  border-radius: 20px;\n  no-repeat: true\n`;\n\nexport const StyledLink = styled(Link)`\n  color: white;\n  font-weight: bold;\n`;\nexport const Button = styled.button`\n  border-radius: 3px;\n  border: 2px solid darkgrey;\n  align: center;\n  color: #216858\n  margin: 0 1em;\n  height: 30px;\n  width: 80px;\n  `;\n\nexport const Title = styled.h1`\n  font-size: 2em;\n  text-align: center;\n  color: #982649;\n  background-color: black;\n  width: 800px;\n  height: 145px;\n  margin: auto;\n  margin-top: 20px;\n  border-radius: 20px;\n`;\n\nexport const Title2 = styled.h2`\n  font-size: 2em;\n  text-align: center;\n  color: white;\n`;\n\nexport const PlayArea = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const StyledCanvas = styled.canvas`\n  width: 450px;\n  margin: auto;\n  border: 3px outset black;\n  border-radius: 3px;\n  z-index: 2;\n`;\n\nexport const CanvasBackground = styled.div`\n  display: flex;\n  width: 800px;\n  border-radius: 3px;\n  background: white;\n  z-index: 1;\n  margin-bottom: 10px;\n`;\n\nexport const Palette = styled.div`\n  display: flex;\n  justify-content: center;\n  background: #4c9c8a;\n  width: 800px;\n  height: 120px;\n  margin: auto;\n  margin-top: 10px;\n  margin-bottom: 125px;\n  border-radius: 20px;\n`;\n\nexport const PaletteBtns = styled.div`\n  margin-top: 10px;\n`;\n\nexport const StartDrawBtn = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nexport const StartDrawImg = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 25%;\n  height: 50%;\n`;\n\nexport const StartWriteImg = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 10%;\n  height: 50%;\n`;\n\nexport const StartWriteBtn = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nexport const LandingPage = styled.div`\n  background-color: #ecf6f0;\n  height: 600px;\n  display: flex;\n  justify-content: center;\n  width: 800px;\n  margin: auto;\n  margin-top: 25px;\n  margin-bottom: 250px;\n`;\n\nexport const LandingBtns = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  margin: 10px;\n  margin-top: 5px;\n`;\n\nexport const LandingButton = styled.button`\n  border-radius: 3px;\n  border: 2px solid darkgrey;\n  align: center;\n  color: #216858;\n  margin: 0 1em;\n  height: 43px;\n  width: 150px;\n  background-color: #134d44;\n  color: white;\n`;\n\nexport const ClearButton = styled.button`\n  border-radius: 6px;\n  border: 2px solid darkgrey;\n  align: center;\n  color: #216858;\n  margin: 0 1em;\n  margin-top: 10px;\n  height: 28px;\n  width: 55px;\n  background-color: #134d44;\n  color: white;\n`;\n\nexport const PngButton = styled.button`\n  border-radius: 6px;\n  border: 2px solid darkgrey;\n  align: center;\n  color: #216858;\n  margin: 0 1em;\n  margin-top: 10px;\n  height: 28px;\n  width: 33px;\n  background-color: #4c9c8a;\n  color: white;\n`;\n\nexport const AddTxtBtn = styled.button`\n  border-radius: 6px;\n  border: 2px solid darkgrey;\n  align: center;\n  color: #216858;\n  margin: 0 1em;\n  margin-top: 5px;\n  height: 28px;\n  width: 80px;\n  background-color: #134d44;\n  color: white;\n`;\n","import socketIOClient from \"socket.io-client\";\nconst SERVER = \"http://127.0.0.1:4001\";\n\nconst socket = socketIOClient(SERVER);\n\nsocket.on(\"connect\", () => {\n  console.log(\"i'm connected with the front end!\");\n});\nexport default socket;\n","import React, { useState, useEffect } from \"react\";\nimport { fabric } from \"fabric\";\nimport {\n  Title2,\n  Palette,\n  AddTxtBtn,\n} from \"./AppCSS\";\nimport { StyledCanvas } from \"./AppCSS\";\nimport { PlayArea } from \"./AppCSS\";\nimport { CanvasBackground } from \"./AppCSS\";\nimport socket from \"./Socket\";\n\nconst WritingCanvas = () => {\n  const initCanvas = () => {\n    const newCanvas = new fabric.Canvas(\"canvas\", {\n      height: 600,\n      width: 800,\n      isContentEditable: true,\n    });\n\n    return newCanvas;\n  };\n  const [textCanvas, setTextCanvas] = useState({});\n  const [font, setFont] = useState(\"arial\");\n\n  useEffect(() => {\n    if (!Object.keys(textCanvas).length) {\n      setTextCanvas(initCanvas());\n    } else {\n      socket.on(\"create new text box\", (value) => {\n        console.log(\"front end heard create new text box\");\n        textCanvas.loadFromJSON(value);\n        setTextCanvas(textCanvas);\n      });\n    }\n  }, [textCanvas]);\n\n  const handleTextBtn = () => {\n    const newText = new fabric.IText(\"Type here...\", {\n      left: 150,\n      top: 100,\n      isContentEditable: true,\n      fontFamily: font,\n    });\n\n    setTextCanvas(textCanvas.add(newText).renderAll());\n    let canvasJSON = textCanvas.toJSON();\n    socket.emit(\"add text box\", canvasJSON);\n  };\n\n  const changeFont = (evt) => {\n    setFont(evt.target.value);\n    textCanvas.getActiveObject().setSelectionStyles({\n      fontFamily: font,\n    });\n    textCanvas.renderAll();\n  };\n\n  return (\n    <div>\n      <Title2></Title2>\n\n      <PlayArea>\n        <CanvasBackground>\n          <StyledCanvas id=\"canvas\"></StyledCanvas>\n        </CanvasBackground>\n      </PlayArea>\n      <Palette>\n        <div id=\"text-options\" style={{ marginTop: \"10px\" }}>\n          <label htmlFor=\"font-family\">Font:</label>\n          <select id=\"font-family\" value={font} onChange={changeFont}>\n            <option value=\"Arial\">Arial</option>\n            <option value=\"comic sans ms\">Comic Sans MS</option>\n            <option value=\"impact\">Impact</option>\n            <option value=\"monaco\">Monaco</option>\n          </select>\n        </div>\n        <AddTxtBtn onClick={() => handleTextBtn()}>Add Text</AddTxtBtn>\n      </Palette>\n    </div>\n  );\n};\n\nexport default WritingCanvas;\n","import React, { useState, useEffect } from \"react\";\nimport { fabric } from \"fabric\";\nimport {\n  // Button,\n  Title2,\n  StyledCanvas,\n  PlayArea,\n  CanvasBackground,\n  Palette,\n  // ClearButton,\n  PngButton,\n} from \"./AppCSS\";\n\nconst DrawingCanvas = () => {\n  const [canvas, setCanvas] = useState(\"\");\n\n  useEffect(() => {\n    setCanvas(initCanvas());\n  }, []);\n\n  useEffect(() => {\n    if (canvas) {\n      updateBrush();\n    }\n  }, [canvas]);\n\n  let drawingColorEl = document.getElementById(\"drawing-color\");\n  let drawingModeEl = document.getElementById(\"drawing-mode-selector\");\n  let drawingLineWidthEl = document.getElementById(\"drawing-line-width\");\n  let brushSizeText = document.getElementById(\"brushSize\");\n  // maybe need to position with value inside canvas\n  const initCanvas = () =>\n    new fabric.Canvas(\"canvas\", {\n      height: 600,\n      width: 800,\n      backgroundColor: \"white\",\n      isDrawingMode: true,\n    });\n\n  // fabric.Object.prototype.transparentCorners = false;\n\n  function updateBrush() {\n    if (!canvas.freeDrawingBrush) {\n      // console.log(\"no free drawing brush\");\n      canvas.freeDrawingBrush = new fabric[drawingModeEl.value + \"Brush\"]();\n    }\n\n    let brush = canvas.freeDrawingBrush;\n    brush.width = parseInt(drawingLineWidthEl.value, 10) || 1;\n    brushSizeText.innerHTML = drawingLineWidthEl.value;\n    brush.color = drawingColorEl.value;\n  }\n\n  return (\n    <div>\n      <Title2></Title2>\n      <PlayArea>\n        <CanvasBackground>\n          <StyledCanvas\n            id=\"canvas\"\n            onClick={() => updateBrush()}\n            onMouseDown={() => updateBrush()}\n          ></StyledCanvas>\n        </CanvasBackground>\n      </PlayArea>\n\n      <Palette>\n        <div id=\"drawing-mode-options\" style={{ marginTop: \"10px\" }}>\n          <label htmlFor=\"drawing-mode-selector\">Mode:</label>\n          <select id=\"drawing-mode-selector\" onChange={() => updateBrush()}>\n            <option value=\"Pencil\">Pencil</option>\n            <option value=\"Circle\">Circle</option>\n            <option value=\"Pattern\">Pattern</option>\n          </select>\n\n          <label htmlFor=\"drawing-line-width\">Line width:</label>\n          <span id=\"brushSize\">11</span>\n          <input\n            type=\"range\"\n            defaultValue=\"11\"\n            min=\"0\"\n            max=\"150\"\n            id=\"drawing-line-width\"\n            onChange={() => updateBrush()}\n          />\n\n          <label htmlFor=\"drawing-color\">Line color:</label>\n          <input\n            type=\"color\"\n            defaultValue=\"#005E7A\"\n            id=\"drawing-color\"\n            onChange={() => updateBrush()}\n          />\n        </div>\n        <PngButton onClick={() => canvas.clear()}>\n          <img\n            src=\"/images/trashBtn.png\"\n            style={{ width: \"100%\", marginTop: \"2px\" }}\n          />\n        </PngButton>\n      </Palette>\n    </div>\n  );\n};\n\nexport default DrawingCanvas;\n","import React from \"react\";\n\nimport {\n  StartDrawBtn,\n  StartWriteBtn,\n  LandingButton,\n  LandingBtns,\n  LandingPage,\n  StartDrawImg,\n  StartWriteImg,\n} from \"./AppCSS\";\n\nconst LandingPageComp = () => {\n  return (\n    <div>\n      <LandingPage>\n        <LandingBtns>\n          <StartDrawBtn>\n            <a href=\"/draw\" style={{ color: \"black\" }}>\n              <StartDrawImg>\n                {\" \"}\n                {/* <img src=\"/images/drawBtn.png\" /> */}\n              </StartDrawImg>\n              <LandingButton>Start Drawing Collab</LandingButton>\n            </a>\n          </StartDrawBtn>\n        </LandingBtns>\n        <LandingBtns>\n          <StartWriteBtn>\n            <a href=\"/write\" style={{ color: \"black\" }}>\n              {\" \"}\n              <StartWriteImg>\n                {/* <img src=\"/images/writeBtn.png\" /> */}\n              </StartWriteImg>\n              <LandingButton>Start Writing Collab</LandingButton>\n            </a>\n          </StartWriteBtn>\n        </LandingBtns>\n      </LandingPage>\n    </div>\n  );\n};\n\nexport default LandingPageComp;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport WritingCanvas from \"./WritingCanvas\";\nimport DrawingCanvas from \"./DrawingCanvas\";\nimport LandingPageComp from \"./LandingPage\";\n\nconst Routes = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={LandingPageComp} />\n        <Route exact path=\"/write\" component={WritingCanvas} />\n        <Route exact path=\"/draw\" component={DrawingCanvas} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default Routes;\n","import React, { useState } from \"react\";\nimport Routes from \"./Routes\";\nimport {\n  // Button,\n  Body,\n  Header,\n  Title,\n  // StartDrawBtn,\n  // StartWriteBtn,\n  // LandingBtns,\n  // LandingPage,\n  // StartDrawImg,\n} from \"./AppCSS\";\n// import LandingPageComp from \"./LandingPage\";\n\nfunction App() {\n  const [loadClient, setLoadClient] = useState(true);\n\n  return (\n    <Body className=\"App\">\n      <Header className=\"App-header\">\n        <Title>\n          <a href=\"/\">\n            <img src=\"/images/logoSm.png\" />\n          </a>\n        </Title>\n      </Header>\n      <div>\n        <Routes />\n      </div>\n    </Body>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}